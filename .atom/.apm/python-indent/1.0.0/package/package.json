{"name":"python-indent","main":"./lib/main","version":"1.0.0","description":"Python PEP8 auto-indentation","author":{"name":"Dustin Speckhals","email":"dustin1114@gmail.com"},"keywords":["python","indent","PEP8"],"contributors":[{"name":"Dustin Speckhals","email":"dustin1114@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/DSpeckhals/python-indent.git"},"license":"MIT","engines":{"atom":">=1.0.0 <2.0.0"},"devDependencies":{"eslint":"^2.13.1","eslint-config-airbnb-base":"^3.0.1","eslint-plugin-import":"^1.10.0"},"readme":"# python-indent [![Build Status](https://travis-ci.org/DSpeckhals/python-indent.svg?branch=master)](https://travis-ci.org/DSpeckhals/python-indent)  \n\n_Atom with easy PEP8 indentation...No more space bar mashing!_\n\n![example of python-indent](https://raw.githubusercontent.com/DSpeckhals/python-indent/master/resources/img/python-indent-demonstration.gif)\n\n__Python Indent__ is the indentation behavior you've been waiting for in Atom! You should no longer have to worry about mashing your tab/space/backspace key every time you press `enter` in the middle of coding. Also, compared to other editors, there is no need to change an app configuration if you want to have a mixture of different types of indents (namely hanging and opening-delimiter-aligned).\n\nThe main obstacle with Atom's native indentation behavior is that it doesn't yet have the necessary API's to do what Python's [PEP8 style guide](https://www.python.org/dev/peps/pep-0008/#indentation) suggests. Enhancement requests and issues have been opened in [Atom Core](https://github.com/atom/atom) on a few occasions, but none have been resolved yet.\n\n- language-python - [Auto indent on line continuation with list/tuple](https://github.com/atom/language-python/issues/22)\n- atom - [Autoindent not working properly](https://github.com/atom/atom/issues/6655)\n\nThis package was made to give you expected indentation behavior; __python-indent__ listens for `editor:newline` events in Python source files, and when triggered, adjusts the indentation to be lined up relative to the opening delimiter of the statement _or_ \"hanging\" (for parameters, tuples, or lists).\n\n### Indent Types\nBoth indent types for continuing lines as described in [PEP 0008 -- Style Guide for Python Code](https://www.python.org/dev/peps/pep-0008/#indentation) are auto-detected and applied by this package.\n  - Aligned with Opening Delimiter\n\n    ```python\n    def function_with_lots_of_params(param_1, param_2,\n                                     param_3, param_4,\n                                     very_long_parameter_name,\n                                     param_6)\n    ```\n  - Hanging\n\n      ```python\n      def function_with_lots_of_params(\n          param_1, param_2,\n          param_3, param_4,\n          very_long_parameter_name,\n          param_6)\n      ```\n\n### Setting\n- __Hanging Indent Tabs__: Number of tabs used for _hanging_ indents\n\n### Examples\n\n```python\ndef current_language_python_package(first_parameter, second_parameter,#<newline>\nthird_parameter):#<---default Atom language-python\n    pass\n\ndef with_python_indent_package_added(first_parameter, second_parameter,\n                                      third_parameter):\n    #<--properly unindents to here\n    pass\n\ndef with_hanging_indent(\n    first_parameter, second_parameter, third_parameter):\n    pass\n\nalso_works_with_lists = [\"apples\", \"oranges\", \"pears\", \"peaches\", \"mangoes\",\n                         \"clementines\", \"etc.\"]#<--PEP8 continued indentation\nor_like_this = [\n    \"apples\", \"oranges\", \"pears\",\n    \"peaches\", \"mangoes\", \"clementines\",\n    \"etc.\"\n]\n\n```\n\nThere are plenty of other examples (ordinary and extraordinary) in the [test_file](https://github.com/DSpeckhals/python-indent/blob/master/spec/test_file.py).\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/DSpeckhals/python-indent/issues"},"homepage":"https://github.com/DSpeckhals/python-indent#readme","_id":"python-indent@1.0.0","_shasum":"8608eab1caa521580f8d7c7a1aa22290bf0bf7aa","_resolved":"file:../d-1161029-62228-1snr89z/package.tgz","_from":"../d-1161029-62228-1snr89z/package.tgz"}