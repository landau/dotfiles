{"_id":"csscomb-core","_rev":"16-6fc2a8478e8d8ce640349745b27df7da","name":"csscomb-core","description":"Framework for writing postprocessors","dist-tags":{"latest":"3.0.0-1"},"versions":{"1.0.0":{"name":"csscomb-core","version":"1.0.0","description":"Core module for CSScomb and JScomb","author":{"name":"Tony Ganch","email":"tonyganch+github@gmail.com"},"dependencies":{"gonzales-pe":"~3.0.0","minimatch":"0.2.12","vow":"0.4.4","vow-fs":"0.3.2"},"main":"lib/core.js","license":"MIT","repository":{"type":"git","url":"https://github.com/csscomb/jscomb"},"bugs":{"url":"https://github.com/csscomb/jscomb/issues"},"homepage":"https://github.com/csscomb/jscomb","_id":"csscomb-core@1.0.0","_shasum":"0b10a6e0454108d3ebcf64d569bade8bf4375706","_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"tonyganch","email":"tonyganch+github@gmail.com"},"maintainers":[{"name":"tonyganch","email":"tonyganch+github@gmail.com"}],"dist":{"shasum":"0b10a6e0454108d3ebcf64d569bade8bf4375706","tarball":"http://registry.npmjs.org/csscomb-core/-/csscomb-core-1.0.0.tgz"},"directories":{}},"1.0.1":{"name":"csscomb-core","version":"1.0.1","description":"Framework for writing postprocessors","dependencies":{"gonzales-pe":"~3.0.0","minimatch":"0.2.12","vow":"0.4.4","vow-fs":"0.3.2"},"main":"lib/core.js","maintainers":[{"name":"tonyganch","email":"tonyganch+github@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"https://github.com/csscomb/core"},"gitHead":"4e0e77b01710dd3c785eb49922b3b469f2a33acd","bugs":{"url":"https://github.com/csscomb/core/issues"},"homepage":"https://github.com/csscomb/core","_id":"csscomb-core@1.0.1","scripts":{},"_shasum":"0ad8934a8d44e9cba77cd1fc58ccef9b8c3aaf13","_from":".","_npmVersion":"1.5.0-alpha-1","_npmUser":{"name":"tonyganch","email":"tonyganch+github@gmail.com"},"dist":{"shasum":"0ad8934a8d44e9cba77cd1fc58ccef9b8c3aaf13","tarball":"http://registry.npmjs.org/csscomb-core/-/csscomb-core-1.0.1.tgz"},"directories":{}},"2.0.0":{"name":"csscomb-core","version":"2.0.0","description":"Framework for writing postprocessors","dependencies":{"gonzales-pe":"~3.0.0","minimatch":"0.2.12","vow":"0.4.4","vow-fs":"0.3.2"},"main":"lib/core.js","maintainers":[{"name":"tonyganch","email":"tonyganch+github@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"https://github.com/csscomb/core"},"gitHead":"5bc378c2330e1331ea18341257fd63acb20ef5f9","bugs":{"url":"https://github.com/csscomb/core/issues"},"homepage":"https://github.com/csscomb/core","_id":"csscomb-core@2.0.0","scripts":{},"_shasum":"a59236e9a5218db203947513f0d74b97afd961b1","_from":".","_npmVersion":"1.5.0-alpha-1","_npmUser":{"name":"tonyganch","email":"tonyganch+github@gmail.com"},"dist":{"shasum":"a59236e9a5218db203947513f0d74b97afd961b1","tarball":"http://registry.npmjs.org/csscomb-core/-/csscomb-core-2.0.0.tgz"},"directories":{}},"2.0.1":{"name":"csscomb-core","version":"2.0.1","description":"Framework for writing postprocessors","dependencies":{"gonzales-pe":"~3.0.0","minimatch":"0.2.12","vow":"0.4.4","vow-fs":"0.3.2"},"main":"lib/core.js","maintainers":[{"name":"tonyganch","email":"tonyganch+github@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"https://github.com/csscomb/core"},"gitHead":"02de4b65f32679dc3d32baf22c7ead812d095b6c","bugs":{"url":"https://github.com/csscomb/core/issues"},"homepage":"https://github.com/csscomb/core","_id":"csscomb-core@2.0.1","scripts":{},"_shasum":"e159e168218b45ecc8801fd9f4fef9ac768b578e","_from":".","_npmVersion":"1.5.0-alpha-1","_npmUser":{"name":"tonyganch","email":"tonyganch+github@gmail.com"},"dist":{"shasum":"e159e168218b45ecc8801fd9f4fef9ac768b578e","tarball":"http://registry.npmjs.org/csscomb-core/-/csscomb-core-2.0.1.tgz"},"directories":{}},"2.0.2":{"name":"csscomb-core","version":"2.0.2","description":"Framework for writing postprocessors","dependencies":{"gonzales-pe":"~3.0.0","minimatch":"0.2.12","vow":"0.4.4","vow-fs":"0.3.2"},"main":"lib/core.js","maintainers":[{"name":"tonyganch","email":"tonyganch+github@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"https://github.com/csscomb/core"},"gitHead":"dec99b7e4998ae8b11f8776770042a57277ca3dc","bugs":{"url":"https://github.com/csscomb/core/issues"},"homepage":"https://github.com/csscomb/core","_id":"csscomb-core@2.0.2","scripts":{},"_shasum":"a4defe2368b0a7528f6552e147029f82cc938745","_from":".","_npmVersion":"1.5.0-alpha-1","_npmUser":{"name":"tonyganch","email":"tonyganch+github@gmail.com"},"dist":{"shasum":"a4defe2368b0a7528f6552e147029f82cc938745","tarball":"http://registry.npmjs.org/csscomb-core/-/csscomb-core-2.0.2.tgz"},"directories":{}},"2.0.3":{"name":"csscomb-core","version":"2.0.3","description":"Framework for writing postprocessors","dependencies":{"gonzales-pe":"~3.0.0-0","minimatch":"0.2.12","vow":"0.4.4","vow-fs":"0.3.2"},"main":"lib/core.js","maintainers":[{"name":"tonyganch","email":"tonyganch+github@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"https://github.com/csscomb/core"},"gitHead":"c1650d736d09530437d6c8e84a94ceda5bd6dc3c","bugs":{"url":"https://github.com/csscomb/core/issues"},"homepage":"https://github.com/csscomb/core","_id":"csscomb-core@2.0.3","scripts":{},"_shasum":"99e11233c08c58335e0bb5167d300d61418bcebe","_from":".","_npmVersion":"1.5.0-alpha-1","_npmUser":{"name":"tonyganch","email":"tonyganch+github@gmail.com"},"dist":{"shasum":"99e11233c08c58335e0bb5167d300d61418bcebe","tarball":"http://registry.npmjs.org/csscomb-core/-/csscomb-core-2.0.3.tgz"},"directories":{}},"2.0.4":{"name":"csscomb-core","version":"2.0.4","description":"Framework for writing postprocessors","dependencies":{"gonzales-pe":"3.0.0-10","minimatch":"0.2.12","vow":"0.4.4","vow-fs":"0.3.2"},"main":"lib/core.js","maintainers":[{"name":"tonyganch","email":"tonyganch+github@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"https://github.com/csscomb/core"},"gitHead":"bcd63daa16967c2a060391b894fa4b427c235a5d","bugs":{"url":"https://github.com/csscomb/core/issues"},"homepage":"https://github.com/csscomb/core","_id":"csscomb-core@2.0.4","scripts":{},"_shasum":"fc1970e543f58df657d096c6d50e4dbd4f99e78f","_from":".","_npmVersion":"1.5.0-alpha-1","_npmUser":{"name":"tonyganch","email":"tonyganch+github@gmail.com"},"dist":{"shasum":"fc1970e543f58df657d096c6d50e4dbd4f99e78f","tarball":"http://registry.npmjs.org/csscomb-core/-/csscomb-core-2.0.4.tgz"},"directories":{}},"3.0.0-1":{"name":"csscomb-core","version":"3.0.0-1","description":"Framework for writing postprocessors","dependencies":{"gonzales-pe":"~3.0.0-13","minimatch":"0.2.12","vow":"0.4.4","vow-fs":"0.3.2"},"main":"lib/core.js","maintainers":[{"name":"tonyganch","email":"tonyganch+github@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"https://github.com/csscomb/core"},"gitHead":"5a48b58d1fd3bc29cc4fc189e0d7dea43513dd04","bugs":{"url":"https://github.com/csscomb/core/issues"},"homepage":"https://github.com/csscomb/core","_id":"csscomb-core@3.0.0-1","scripts":{},"_shasum":"a339c340dbeb908e9806a759d0bee2e319ef8163","_from":".","_npmVersion":"2.1.14","_nodeVersion":"0.11.13","_npmUser":{"name":"tonyganch","email":"tonyganch+github@gmail.com"},"dist":{"shasum":"a339c340dbeb908e9806a759d0bee2e319ef8163","tarball":"http://registry.npmjs.org/csscomb-core/-/csscomb-core-3.0.0-1.tgz"},"directories":{}}},"readme":"# CSScomb Core\n\nCSScomb Core is a framework for writing postprocessors.  \nIt provides you with a nice set of features:\n\n1. Parser with support of preprocessors\n1. API to create and use options\n1. API to process files and directories\n\n\n## Usage\n\n```js\nvar Comb = require('csscomb-core');\n// Constructor accepts a list of options to use and list of acceptable syntaxes.\nvar comb = new Comb(options, 'css');\n```\n\nFor a simple example of usage take a look [at a template project](https://github.com/csscomb/core-template).  \nFeel free to fork it and modify.\n\n## List of public methods\n\nThere are a number of methods that become available once you create an instance.\n\n### comb.use(option)\n\nUse a plugin.\n\n- Params: *{Object}*  Option's plugin\n- Return: *{CombCore}*  Instance's object\n\n### comb.configure(config)\n\nLoad configuration from JSON.  \nActivate and configure needed options.\n\n- Params: *{Object}*  Config\n- Return: *{CombCore}*  Instance's object\n\n### comb.getOptionsOrder()\n\nGet list of available options in exact order they will be processed.  \nCan be used for testing purpose.\n\n- Return: *{Array}*  List of options' names\n\n### comb.getValue(optionName)\n\nGet option's value.  \nCan be used inside plugin's `process` method.\n\n- Params: *{String}*  Option's name\n- Return: Value set by user for this option\n\n### comb.getSyntax()\n\nGet name of syntax that is currently being used.  \nCan be used inside plugin's `process` method.\n\n- Return: *{String}*  Syntax name\n\n### comb.processPath(path)\n\nProcess a file or a directory.\n\n- Params: *{String}*  Path to file or directory</td>\n- Return: *{Promise}*\n\n### comb.processDirectory(path)\n\nProcess all files in a directory.\n\n- Params: *{String}*  Path to directory\n- Return: *{Promise}*\n\n### comb.processFile(path)\n\nProcess a single file.\n\n- Params: *{String}*  Path to file\n- Return: *{Promise}*\n\n### comb.processString(string, options)\n\nProcess a string.\n\n- Params:  \n  *{String}*  Code to process  \n  *{{context: String, filename: String, syntax: String}}* Options (optional)\n  where *context* is\n  Gonzales PE rule, *filename* is a file's name that is used to display errors and\n  *syntax* is syntax name with `css` being a default value.  \n- Return: *{String}*  Processed string\n\n## Writing a plugin\n\nA plugin is a JavaScript object that has methods to set value and process AST\nnodes.  \nTake a look at [Flip Comb](https://github.com/csscomb/core-template/blob/master/lib/options/flip-comments.js) for an example.  \nThere are some fields you should take care of.\n\n### name\n\nOption's name as it should be used in config.\n\n- Required: yes\n- Acceptable value: *{String}*\n- Example: `\"flip-comments\"`\n\n### syntax\n\nList of syntaxes the option supports.  \nThis depends on parser possibilities.  \nCurrently the following work fine: `css`, `less`, `sass` and `scss`.\n\n- Required: yes\n- Acceptable value: *{Array}*\n- Example: `['css']`\n\n### accepts\n\nIn order to tell CSScomb Core which values are acceptable, plugin should have\neither `accepts` or `setValue` field.  \n`accepts` should be used to provide patterns, while `setValue` is good for\nmodifying value before using it.\n\nYou can use one or several of the following:  \n– `boolean: [true]`  \n– `boolean: [false]`  \n– `boolean: [true, false]`  \n– `string: /regexp/`  \n– `number: true`\n\n- Required: no, but if this field is missed, `setValue` must be set\n- Acceptable value: *{Object}*\n- Example: `{ boolean: [true] }`\n\n### setValue\n\nFunction to modify option's value before using it.  \nThis field overrides `accepts` field if it's set in the plugin too.\n\n- Required: no, but if this field is missed, `accepts` must be set\n- Acceptable value: *{Function}*\n- Example: ` function(value) { return value * 4; }`\n\n### runBefore\n\nRun the plugin before another option.  \n\n- Required: no\n- Acceptable value: *{String}* Another option's name\n- Example: `\"block-indent\"`\n\n### process\n\nModify AST nodes.\n\n- Required: yes\n- Acceptable value: *{Function}*\n- Example: <pre><code>function(nodeType, nodeContent) {\n        if (nodeType === 'commentML') node[0] = ' (╯°□°）╯︵ ┻━┻ ';\n}</code></pre>\n","maintainers":[{"name":"tonyganch","email":"tonyganch+github@gmail.com"}],"time":{"modified":"2015-02-01T20:24:41.126Z","created":"2014-07-05T18:50:04.739Z","1.0.0":"2014-07-05T18:50:04.739Z","1.0.1":"2014-07-07T11:51:57.482Z","2.0.0":"2014-07-18T17:42:07.292Z","2.0.1":"2014-07-19T06:31:37.913Z","2.0.2":"2014-07-19T09:39:48.812Z","2.0.3":"2014-09-21T10:32:09.421Z","2.0.4":"2014-11-15T10:28:58.398Z","3.0.0-1":"2015-02-01T20:24:41.126Z"},"homepage":"https://github.com/csscomb/core","repository":{"type":"git","url":"https://github.com/csscomb/core"},"bugs":{"url":"https://github.com/csscomb/core/issues"},"license":"MIT","readmeFilename":"README.md","_attachments":{},"_etag":"\"32MLK7DQTBP308TXIRIEPIY6F\""}