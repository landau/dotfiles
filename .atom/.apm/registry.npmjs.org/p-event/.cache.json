{"_id":"p-event","_rev":"5-76af8c416c9e456a0d50750985141f5b","name":"p-event","description":"Promisify an event by waiting for it to be emitted","dist-tags":{"latest":"1.3.0"},"versions":{"1.0.0":{"name":"p-event","version":"1.0.0","description":"Promisify an event by waiting for it to be emitted","license":"MIT","repository":{"type":"git","url":"git+https://github.com/sindresorhus/p-event.git"},"author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"engines":{"node":">=4"},"scripts":{"test":"xo && ava"},"files":["index.js"],"keywords":["promise","events","event","emitter","eventemitter","event-emitter","emit","emits","listener","promisify","addlistener","addeventlistener","wait","waits","on","browser","dom","async","await","promises","bluebird"],"devDependencies":{"ava":"*","delay":"^1.3.1","xo":"*"},"gitHead":"3a2a5e5e28682ebdb3d2e81fd6667a1451a9f41d","bugs":{"url":"https://github.com/sindresorhus/p-event/issues"},"homepage":"https://github.com/sindresorhus/p-event#readme","_id":"p-event@1.0.0","_shasum":"f3e5ea67c501cc34c12cc68715c214948142c46f","_from":".","_npmVersion":"2.15.11","_nodeVersion":"4.7.3","_npmUser":{"name":"sindresorhus","email":"sindresorhus@gmail.com"},"dist":{"shasum":"f3e5ea67c501cc34c12cc68715c214948142c46f","tarball":"https://registry.npmjs.org/p-event/-/p-event-1.0.0.tgz"},"maintainers":[{"name":"sindresorhus","email":"sindresorhus@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/p-event-1.0.0.tgz_1493226110149_0.8426612266339362"},"directories":{}},"1.1.0":{"name":"p-event","version":"1.1.0","description":"Promisify an event by waiting for it to be emitted","license":"MIT","repository":{"type":"git","url":"git+https://github.com/sindresorhus/p-event.git"},"author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"engines":{"node":">=4"},"scripts":{"test":"xo && ava"},"files":["index.js"],"keywords":["promise","events","event","emitter","eventemitter","event-emitter","emit","emits","listener","promisify","addlistener","addeventlistener","wait","waits","on","browser","dom","async","await","promises","bluebird"],"devDependencies":{"ava":"*","delay":"^1.3.1","xo":"*"},"gitHead":"e21ec727f1f39dc4a74138d5828ab951efd8b7e2","bugs":{"url":"https://github.com/sindresorhus/p-event/issues"},"homepage":"https://github.com/sindresorhus/p-event#readme","_id":"p-event@1.1.0","_shasum":"ef5ef2487e9fe4fe3b7d87022783b51254826d30","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.9.0","_npmUser":{"name":"sindresorhus","email":"sindresorhus@gmail.com"},"dist":{"shasum":"ef5ef2487e9fe4fe3b7d87022783b51254826d30","tarball":"https://registry.npmjs.org/p-event/-/p-event-1.1.0.tgz"},"maintainers":[{"name":"sindresorhus","email":"sindresorhus@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/p-event-1.1.0.tgz_1494153025631_0.21685738256201148"},"directories":{}},"1.2.0":{"name":"p-event","version":"1.2.0","description":"Promisify an event by waiting for it to be emitted","license":"MIT","repository":{"type":"git","url":"git+https://github.com/sindresorhus/p-event.git"},"author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"engines":{"node":">=4"},"scripts":{"test":"xo && ava"},"files":["index.js"],"keywords":["promise","events","event","emitter","eventemitter","event-emitter","emit","emits","listener","promisify","addlistener","addeventlistener","wait","waits","on","browser","dom","async","await","promises","bluebird"],"dependencies":{"p-timeout":"^1.1.1"},"devDependencies":{"ava":"*","delay":"^1.3.1","xo":"*"},"gitHead":"80dfb8793b5481f09429f3c01c4df604fa03cde3","bugs":{"url":"https://github.com/sindresorhus/p-event/issues"},"homepage":"https://github.com/sindresorhus/p-event#readme","_id":"p-event@1.2.0","_shasum":"837cfbeb652e497922f22162fb1f4c8487e27173","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"sindresorhus","email":"sindresorhus@gmail.com"},"dist":{"shasum":"837cfbeb652e497922f22162fb1f4c8487e27173","tarball":"https://registry.npmjs.org/p-event/-/p-event-1.2.0.tgz"},"maintainers":[{"name":"sindresorhus","email":"sindresorhus@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/p-event-1.2.0.tgz_1494774347491_0.8959797311108559"},"directories":{}},"1.3.0":{"name":"p-event","version":"1.3.0","description":"Promisify an event by waiting for it to be emitted","license":"MIT","repository":{"type":"git","url":"git+https://github.com/sindresorhus/p-event.git"},"author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"engines":{"node":">=4"},"scripts":{"test":"xo && ava"},"files":["index.js"],"keywords":["promise","events","event","emitter","eventemitter","event-emitter","emit","emits","listener","promisify","addlistener","addeventlistener","wait","waits","on","browser","dom","async","await","promises","bluebird"],"dependencies":{"p-timeout":"^1.1.1"},"devDependencies":{"ava":"*","delay":"^1.3.1","xo":"*"},"gitHead":"1674bd43fe7602d2f048d3d199be12d4ef16787c","bugs":{"url":"https://github.com/sindresorhus/p-event/issues"},"homepage":"https://github.com/sindresorhus/p-event#readme","_id":"p-event@1.3.0","_shasum":"8e6b4f4f65c72bc5b6fe28b75eda874f96a4a085","_from":".","_npmVersion":"2.15.11","_nodeVersion":"4.8.3","_npmUser":{"name":"sindresorhus","email":"sindresorhus@gmail.com"},"dist":{"shasum":"8e6b4f4f65c72bc5b6fe28b75eda874f96a4a085","tarball":"https://registry.npmjs.org/p-event/-/p-event-1.3.0.tgz"},"maintainers":[{"name":"sindresorhus","email":"sindresorhus@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/p-event-1.3.0.tgz_1498082805774_0.892939229728654"},"directories":{}}},"readme":"# p-event [![Build Status](https://travis-ci.org/sindresorhus/p-event.svg?branch=master)](https://travis-ci.org/sindresorhus/p-event)\n\n> Promisify an event by waiting for it to be emitted\n\nUseful when you need only one event emission and want to use it with promises or await it in an async function.\n\nIf you want multiple individual events as they are emitted, this module is not for you, as a Promise is a single value. Instead, just continue using event callback or use [Observables](https://medium.com/@benlesh/learning-observable-by-building-observable-d5da57405d87).\n\n\n## Install\n\n```\n$ npm install --save p-event\n```\n\n\n## Usage\n\n```js\nconst pEvent = require('p-event');\nconst emitter = require('./some-event-emitter');\n\npEvent(emitter, 'finish')\n\t// Called when `emitter` emits a `finish` event\n\t.then(result => {\n\t\tconsole.log(result);\n\t})\n\t// Called when `emitter` emits an `error` event\n\t.catch(error => {\n\t\tconsole.error(error);\n\t});\n```\n\n```js\nconst pEvent = require('p-event');\n\npEvent(document, 'DOMContentLoaded').then(() => {\n\tconsole.log('ðŸ˜Ž');\n});\n```\n\n\n## API\n\n### pEvent(emitter, event, [options])\n### pEvent(emitter, event, filter)\n\nReturns a `Promise` that is fulfilled when `emitter` emits an event matching `event`, or rejects if `emitter` emits any of the events defined in the `rejectionEvents` option.\n\nThe returned promise has a `.cancel()` method, which when called, removes the event listeners and causes the promise to never be settled.\n\n#### emitter\n\nType: `Object`\n\nEvent emitter object.\n\nShould have either a `.on()`/`.addListener()`/`.addEventListener()` and `.off()`/`.removeListener()`/`.removeEventListener()` method, like the [Node.js `EventEmitter`](https://nodejs.org/api/events.html) and [DOM events](https://developer.mozilla.org/en-US/docs/Web/Events).\n\n#### event\n\nType: `string`\n\nName of the event to listen to.\n\nIf the same event is defined both here and in `rejectionEvents`, this one takes priority.\n\n#### options\n\nType: `Object`\n\n##### rejectionEvents\n\nType: `Array`<br>\nDefault: `['error']`\n\nEvents that will reject the promise.\n\n##### multiArgs\n\nType: `boolean`<br>\nDefault: `false`\n\nBy default, the promisified function will only return the first argument from the event callback, which works fine for most APIs. This option can be useful for APIs that return multiple arguments in the callback. Turning this on will make it return an array of all arguments from the callback, instead of just the first argument. This also applies to rejections.\n\nExample:\n\n```js\nconst pEvent = require('p-event');\nconst emitter = require('./some-event-emitter');\n\npEvent(emitter, 'finish', {multiArgs: true}).then(result => {\n\tconst [id, type] = result;\n});\n```\n\n##### timeout\n\nType: `Number`<br>\nDefault: `Infinity`\n\nTime in milliseconds before timing out.\n\n\n##### filter\n\nType: `Function`\n\nFilter function for accepting an event.\n\n```js\nconst pEvent = require('p-event');\nconst emitter = require('./some-event-emitter');\n\npEvent(emitter, 'ðŸ¦„', value => value > 3).then(result => {\n\t// Do something with first ðŸ¦„ event with a value greater than 3\n});\n```\n\n\n## Before and after\n\n```js\nconst fs = require('fs');\n\nfunction getOpenReadStream(file, callback) {\n\tconst stream = fs.createReadStream(file);\n\n\tstream.on('open', () => {\n\t\tcallback(null, stream);\n\t});\n\n\tstream.on('error', error => {\n\t\tcallback(error);\n\t});\n}\n\ngetOpenReadStream('unicorn.txt', (error, stream) => {\n\tif (error) {\n\t\tconsole.error(error);\n\t\treturn;\n\t}\n\n\tconsole.log('File descriptor:', stream.fd);\n\tstream.pipe(process.stdout);\n});\n```\n\n```js\nconst fs = require('fs');\nconst pEvent = require('p-event');\n\nasync function getOpenReadStream(file) {\n\tconst stream = fs.createReadStream(file);\n\tawait pEvent(stream, 'open');\n\treturn stream;\n}\n\ngetOpenReadStream('unicorn.txt')\n\t.then(stream => {\n\t\tconsole.log('File descriptor:', stream.fd);\n\t\tstream.pipe(process.stdout);\n\t})\n\t.catch(console.error);\n```\n\n\n## Related\n\n- [pify](https://github.com/sindresorhus/pify) - Promisify a callback-style function\n- [p-map](https://github.com/sindresorhus/p-map) - Map over promises concurrently\n- [Moreâ€¦](https://github.com/sindresorhus/promise-fun)\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n","maintainers":[{"name":"sindresorhus","email":"sindresorhus@gmail.com"}],"time":{"modified":"2017-06-21T22:06:46.714Z","created":"2017-04-26T17:01:50.528Z","1.0.0":"2017-04-26T17:01:50.528Z","1.1.0":"2017-05-07T10:30:25.926Z","1.2.0":"2017-05-14T15:05:50.048Z","1.3.0":"2017-06-21T22:06:46.714Z"},"homepage":"https://github.com/sindresorhus/p-event#readme","keywords":["promise","events","event","emitter","eventemitter","event-emitter","emit","emits","listener","promisify","addlistener","addeventlistener","wait","waits","on","browser","dom","async","await","promises","bluebird"],"repository":{"type":"git","url":"git+https://github.com/sindresorhus/p-event.git"},"author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/p-event/issues"},"license":"MIT","readmeFilename":"readme.md","users":{"rocket0191":true},"_attachments":{},"_etag":"W/\"594aedf6-2bbb\"","_lastModified":"Wed, 21 Jun 2017 22:06:46 GMT","_cached":true}