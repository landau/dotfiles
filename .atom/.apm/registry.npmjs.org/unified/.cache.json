{"_id":"unified","_rev":"8-e6113bb9f9cff7dc4710c501e5de14cf","name":"unified","description":"Text processing framework: Parse / Transform / Compile","dist-tags":{"latest":"3.0.0"},"versions":{"1.0.0":{"name":"unified","version":"1.0.0","description":"Text processing framework: Parse / Transform / Compile","license":"MIT","keywords":["process","parse","transform","compile","stringify","retext","mdast"],"dependencies":{"attach-ware":"^1.0.0","bail":"^1.0.0","unherit":"^1.0.4","vfile":"^1.0.0","ware":"^1.3.0"},"repository":{"type":"git","url":"git+https://github.com/wooorm/unified.git"},"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com"},"files":["index.js"],"devDependencies":{"browserify":"^11.0.0","eslint":"^0.24.0","esmangle":"^1.0.0","istanbul":"^0.3.0","jscs":"^2.0.0","jscs-jsdoc":"^1.0.0","mdast":"^0.27.1","mdast-comment-config":"^0.1.2","mdast-github":"^0.3.0","mdast-lint":"^0.4.0","mdast-man":"^0.4.0","mdast-toc":"^0.5.1","mdast-validate-links":"^0.3.0","mocha":"^2.0.0"},"scripts":{"test-api":"mocha --check-leaks test.js","test-coveralls":"istanbul cover _mocha --report lcovonly -- --check-leaks test.js","test-coverage":"istanbul cover _mocha -- -- test.js","test-travis":"npm run test-coveralls","test":"npm run test-api","lint-api":"eslint .","lint-style":"jscs --reporter inline .","lint":"npm run lint-api && npm run lint-style","make":"npm run lint && npm run test-coverage","build-md":"mdast . --quiet","build-bundle":"browserify index.js -s AttachWare > unified.js","postbuild-bundle":"esmangle unified.js > unified.min.js","build":"npm run build-md && npm run build-bundle"},"gitHead":"6dae05dd38ea97bf897ee6ff808e210a59ccbc81","bugs":{"url":"https://github.com/wooorm/unified/issues"},"homepage":"https://github.com/wooorm/unified#readme","_id":"unified@1.0.0","_shasum":"630e61e18f06206e79f23e0a801a7ae6a294a7e4","_from":".","_npmVersion":"2.11.3","_nodeVersion":"2.3.3","_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"dist":{"shasum":"630e61e18f06206e79f23e0a801a7ae6a294a7e4","tarball":"http://registry.npmjs.org/unified/-/unified-1.0.0.tgz"},"maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"directories":{}},"2.0.0":{"name":"unified","version":"2.0.0","description":"Text processing framework: Parse / Transform / Compile","license":"MIT","keywords":["process","parse","transform","compile","stringify","retext","mdast"],"dependencies":{"attach-ware":"^1.0.0","bail":"^1.0.0","unherit":"^1.0.4","vfile":"^1.0.0","ware":"^1.3.0"},"repository":{"type":"git","url":"git+https://github.com/wooorm/unified.git"},"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com"},"files":["index.js"],"devDependencies":{"browserify":"^11.0.0","eslint":"^1.0.0","esmangle":"^1.0.0","istanbul":"^0.3.0","jscs":"^2.0.0","jscs-jsdoc":"^1.0.0","mdast":"^1.0.0","mdast-comment-config":"^1.0.0","mdast-github":"^1.0.0","mdast-lint":"^1.0.0","mdast-man":"^1.0.0","mdast-toc":"^1.0.0","mdast-validate-links":"^1.0.0","mocha":"^2.0.0"},"scripts":{"test-api":"mocha --check-leaks test.js","test-coveralls":"istanbul cover _mocha --report lcovonly -- --check-leaks test.js","test-coverage":"istanbul cover _mocha -- -- test.js","test-travis":"npm run test-coveralls","test":"npm run test-api","lint-api":"eslint .","lint-style":"jscs --reporter inline .","lint":"npm run lint-api && npm run lint-style","make":"npm run lint && npm run test-coverage","build-md":"mdast . --quiet","build-bundle":"browserify index.js -s AttachWare > unified.js","postbuild-bundle":"esmangle unified.js > unified.min.js","build":"npm run build-md && npm run build-bundle"},"gitHead":"b677413ded8f9f1d0504e993476ba452b3e6c992","bugs":{"url":"https://github.com/wooorm/unified/issues"},"homepage":"https://github.com/wooorm/unified#readme","_id":"unified@2.0.0","_shasum":"d059e2b9083723ccf193dcff26aac22134d5a3f2","_from":".","_npmVersion":"2.14.2","_nodeVersion":"4.0.0","_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"dist":{"shasum":"d059e2b9083723ccf193dcff26aac22134d5a3f2","tarball":"http://registry.npmjs.org/unified/-/unified-2.0.0.tgz"},"maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"directories":{}},"2.1.0":{"name":"unified","version":"2.1.0","description":"Text processing framework: Parse / Transform / Compile","license":"MIT","keywords":["process","parse","transform","compile","stringify","hast","retext","mdast"],"dependencies":{"attach-ware":"^1.0.0","bail":"^1.0.0","extend":"^3.0.0","unherit":"^1.0.4","vfile":"^1.0.0","ware":"^1.3.0"},"repository":{"type":"git","url":"git+https://github.com/wooorm/unified.git"},"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com"},"files":["index.js"],"devDependencies":{"browserify":"^11.0.0","eslint":"^1.0.0","esmangle":"^1.0.0","istanbul":"^0.3.0","jscs":"^2.0.0","jscs-jsdoc":"^1.0.0","mdast":"^1.0.0","mdast-comment-config":"^1.0.0","mdast-github":"^1.0.0","mdast-lint":"^1.0.0","mdast-man":"^1.0.0","mdast-toc":"^1.0.0","mdast-validate-links":"^1.0.0","mocha":"^2.0.0"},"scripts":{"test-api":"mocha --check-leaks test.js","test-coveralls":"istanbul cover _mocha --report lcovonly -- --check-leaks test.js","test-coverage":"istanbul cover _mocha -- -- test.js","test-travis":"npm run test-coveralls","test":"npm run test-api","lint-api":"eslint .","lint-style":"jscs --reporter inline .","lint":"npm run lint-api && npm run lint-style","make":"npm run lint && npm run test-coverage","build-md":"mdast . --quiet","build-bundle":"browserify index.js -s AttachWare > unified.js","postbuild-bundle":"esmangle unified.js > unified.min.js","build":"npm run build-md && npm run build-bundle"},"gitHead":"b00d9635679b11c229ddcf6c76b0e724c46e74ae","bugs":{"url":"https://github.com/wooorm/unified/issues"},"homepage":"https://github.com/wooorm/unified#readme","_id":"unified@2.1.0","_shasum":"d7d7214436ad43e80a80681171725b2ac28223c5","_from":".","_npmVersion":"3.3.5","_nodeVersion":"4.1.1","_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"dist":{"shasum":"d7d7214436ad43e80a80681171725b2ac28223c5","tarball":"http://registry.npmjs.org/unified/-/unified-2.1.0.tgz"},"maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"directories":{}},"2.1.1":{"name":"unified","version":"2.1.1","description":"Text processing framework: Parse / Transform / Compile","license":"MIT","keywords":["process","parse","transform","compile","stringify","hast","retext","mdast"],"dependencies":{"attach-ware":"^1.0.0","bail":"^1.0.0","extend":"^3.0.0","unherit":"^1.0.4","vfile":"^1.0.0","ware":"^1.3.0"},"repository":{"type":"git","url":"git+https://github.com/wooorm/unified.git"},"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com"},"files":["index.js"],"devDependencies":{"browserify":"^11.0.0","eslint":"^1.0.0","esmangle":"^1.0.0","istanbul":"^0.3.0","jscs":"^2.0.0","jscs-jsdoc":"^1.0.0","mdast":"^1.0.0","mdast-comment-config":"^1.0.0","mdast-github":"^1.0.0","mdast-lint":"^1.0.0","mdast-man":"^1.0.0","mdast-toc":"^1.0.0","mdast-validate-links":"^1.0.0","mocha":"^2.0.0"},"scripts":{"test-api":"mocha --check-leaks test.js","test-coveralls":"istanbul cover _mocha --report lcovonly -- --check-leaks test.js","test-coverage":"istanbul cover _mocha -- -- test.js","test-travis":"npm run test-coveralls","test":"npm run test-api","lint-api":"eslint .","lint-style":"jscs --reporter inline .","lint":"npm run lint-api && npm run lint-style","make":"npm run lint && npm run test-coverage","build-md":"mdast . --quiet","build-bundle":"browserify index.js -s AttachWare -u node-extend > unified.js","postbuild-bundle":"esmangle unified.js > unified.min.js","build":"npm run build-md && npm run build-bundle"},"gitHead":"5b0a28133344acdec1ba4c2dd24e7838348db39d","bugs":{"url":"https://github.com/wooorm/unified/issues"},"homepage":"https://github.com/wooorm/unified#readme","_id":"unified@2.1.1","_shasum":"6eab38a701c7b5251257080ca21ae6d9c3d591f7","_from":".","_npmVersion":"3.3.5","_nodeVersion":"4.1.1","_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"dist":{"shasum":"6eab38a701c7b5251257080ca21ae6d9c3d591f7","tarball":"http://registry.npmjs.org/unified/-/unified-2.1.1.tgz"},"maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"directories":{}},"2.1.2":{"name":"unified","version":"2.1.2","description":"Text processing framework: Parse / Transform / Compile","license":"MIT","keywords":["process","parse","transform","compile","stringify","hast","retext","mdast"],"dependencies":{"attach-ware":"^1.0.0","bail":"^1.0.0","extend":"^3.0.0","unherit":"^1.0.4","vfile":"^1.0.0","ware":"^1.3.0"},"browser":{"node-extend":"extend"},"repository":{"type":"git","url":"git+https://github.com/wooorm/unified.git"},"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com"},"files":["index.js"],"devDependencies":{"browserify":"^11.0.0","eslint":"^1.0.0","esmangle":"^1.0.0","istanbul":"^0.3.0","jscs":"^2.0.0","jscs-jsdoc":"^1.0.0","mdast":"^1.0.0","mdast-comment-config":"^1.0.0","mdast-github":"^1.0.0","mdast-lint":"^1.0.0","mdast-man":"^1.0.0","mdast-toc":"^1.0.0","mdast-validate-links":"^1.0.0","mocha":"^2.0.0"},"scripts":{"test-api":"mocha --check-leaks test.js","test-coveralls":"istanbul cover _mocha --report lcovonly -- --check-leaks test.js","test-coverage":"istanbul cover _mocha -- -- test.js","test-travis":"npm run test-coveralls","test":"npm run test-api","lint-api":"eslint .","lint-style":"jscs --reporter inline .","lint":"npm run lint-api && npm run lint-style","make":"npm run lint && npm run test-coverage","build-md":"mdast . --quiet","build-bundle":"browserify index.js -s AttachWare > unified.js","postbuild-bundle":"esmangle unified.js > unified.min.js","build":"npm run build-md && npm run build-bundle"},"gitHead":"c397863ed7dd72e8d8b0278a1d39c24a3641344b","bugs":{"url":"https://github.com/wooorm/unified/issues"},"homepage":"https://github.com/wooorm/unified#readme","_id":"unified@2.1.2","_shasum":"c3fe3bdcf69358c03faf9c4d8acebbf4d2615044","_from":".","_npmVersion":"3.3.5","_nodeVersion":"4.1.1","_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"dist":{"shasum":"c3fe3bdcf69358c03faf9c4d8acebbf4d2615044","tarball":"http://registry.npmjs.org/unified/-/unified-2.1.2.tgz"},"maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"directories":{}},"2.1.3":{"name":"unified","version":"2.1.3","description":"Text processing framework: Parse / Transform / Compile","license":"MIT","keywords":["process","parse","transform","compile","stringify","hast","retext","remark"],"dependencies":{"attach-ware":"^1.0.0","bail":"^1.0.0","extend":"^3.0.0","unherit":"^1.0.4","vfile":"^1.0.0","ware":"^1.3.0"},"browser":{"node-extend":"extend"},"repository":{"type":"git","url":"https://github.com/wooorm/unified.git"},"bugs":{"url":"https://github.com/wooorm/unified/issues"},"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com"},"files":["index.js"],"devDependencies":{"browserify":"^13.0.0","eslint":"^1.0.0","esmangle":"^1.0.0","istanbul":"^0.4.0","jscs":"^2.0.0","jscs-jsdoc":"^1.0.0","remark":"^3.0.0","remark-comment-config":"^2.0.0","remark-github":"^4.0.0","remark-lint":"^2.0.0","remark-man":"^2.0.0","remark-toc":"^2.0.0","remark-validate-links":"^2.0.0","tape":"^4.4.0"},"scripts":{"build-md":"remark . --quiet --frail","build-bundle":"browserify index.js -s AttachWare > unified.js","build-mangle":"esmangle unified.js > unified.min.js","build":"npm run build-md && npm run build-bundle && npm run build-mangle","lint-api":"eslint .","lint-style":"jscs --reporter inline .","lint":"npm run lint-api && npm run lint-style","test-api":"node test.js","test-coverage":"istanbul cover test.js","test":"npm run build && npm run lint && npm run test-coverage"},"gitHead":"aa92c3bfd9a97c8114e1f9249fd5809e02e74e3b","homepage":"https://github.com/wooorm/unified","_id":"unified@2.1.3","_shasum":"a7dcc644568574fc82e72d7253b66e9facc821fa","_from":".","_npmVersion":"2.3.0","_nodeVersion":"0.11.16","_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"dist":{"shasum":"a7dcc644568574fc82e72d7253b66e9facc821fa","tarball":"http://registry.npmjs.org/unified/-/unified-2.1.3.tgz"},"maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"directories":{}},"2.1.4":{"name":"unified","version":"2.1.4","description":"Text processing framework: Parse / Transform / Compile","license":"MIT","keywords":["process","parse","transform","compile","stringify","hast","retext","remark"],"dependencies":{"attach-ware":"^1.0.0","bail":"^1.0.0","extend":"^3.0.0","unherit":"^1.0.4","vfile":"^1.0.0","ware":"^1.3.0"},"browser":{"node-extend":"extend"},"repository":{"type":"git","url":"git+https://github.com/wooorm/unified.git"},"bugs":{"url":"https://github.com/wooorm/unified/issues"},"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com"},"files":["index.js"],"devDependencies":{"browserify":"^13.0.0","eslint":"^1.0.0","esmangle":"^1.0.0","istanbul":"^0.4.0","jscs":"^2.0.0","jscs-jsdoc":"^1.0.0","remark":"^3.0.0","remark-comment-config":"^2.0.0","remark-github":"^4.0.0","remark-lint":"^2.0.0","remark-man":"^2.0.0","remark-toc":"^2.0.0","remark-validate-links":"^2.0.0","tape":"^4.4.0"},"scripts":{"build-md":"remark . --quiet --frail","build-bundle":"browserify index.js -s AttachWare > unified.js","build-mangle":"esmangle unified.js > unified.min.js","build":"npm run build-md && npm run build-bundle && npm run build-mangle","lint-api":"eslint .","lint-style":"jscs --reporter inline .","lint":"npm run lint-api && npm run lint-style","test-api":"node test.js","test-coverage":"istanbul cover test.js","test":"npm run build && npm run lint && npm run test-coverage"},"gitHead":"cf783f04890e5e9532982ba3abb37643a78ca66e","homepage":"https://github.com/wooorm/unified#readme","_id":"unified@2.1.4","_shasum":"14bc6cd40d98ffff75b405506bad873ecbbac3ba","_from":".","_npmVersion":"3.5.0","_nodeVersion":"5.1.0","_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"dist":{"shasum":"14bc6cd40d98ffff75b405506bad873ecbbac3ba","tarball":"http://registry.npmjs.org/unified/-/unified-2.1.4.tgz"},"maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"directories":{}},"3.0.0":{"name":"unified","version":"3.0.0","description":"Text processing framework: Parse / Transform / Compile","license":"MIT","keywords":["process","parse","transform","compile","stringify","hast","retext","remark"],"dependencies":{"attach-ware":"^2.0.0","bail":"^1.0.0","extend":"^3.0.0","unherit":"^1.0.4","vfile":"^1.0.0","ware":"^1.3.0"},"browser":{"node-extend":"extend"},"repository":{"type":"git","url":"git+https://github.com/wooorm/unified.git"},"bugs":{"url":"https://github.com/wooorm/unified/issues"},"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"},"contributors":[{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"}],"engines":{"node":">=0.10.0"},"files":["index.js"],"devDependencies":{"browserify":"^13.0.0","eslint":"^2.0.0","esmangle":"^1.0.0","istanbul":"^0.4.0","jscs":"^2.0.0","jscs-jsdoc":"^1.0.0","remark":"^3.0.0","remark-comment-config":"^2.0.0","remark-github":"^4.0.0","remark-lint":"^2.0.0","remark-toc":"^2.0.0","remark-validate-links":"^2.0.0","tape":"^4.4.0"},"scripts":{"build-md":"remark . --quiet --frail","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","build":"npm run build-md && npm run build-bundle && npm run build-mangle","lint-api":"eslint .","lint-style":"jscs --reporter inline .","lint":"npm run lint-api && npm run lint-style","test-api":"node test.js","test-coverage":"istanbul cover test.js","test":"npm run build && npm run lint && npm run test-coverage"},"gitHead":"32b917f97b1ce4f46dd180894651cc5352f40362","homepage":"https://github.com/wooorm/unified#readme","_id":"unified@3.0.0","_shasum":"85ce4169b09ee9f084d07f4d0a1fbe3939518712","_from":".","_npmVersion":"3.3.6","_nodeVersion":"5.0.0","_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"dist":{"shasum":"85ce4169b09ee9f084d07f4d0a1fbe3939518712","tarball":"http://registry.npmjs.org/unified/-/unified-3.0.0.tgz"},"maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"_npmOperationalInternal":{"host":"packages-9-west.internal.npmjs.com","tmp":"tmp/unified-3.0.0.tgz_1455369080701_0.027905355440452695"},"directories":{}}},"readme":"# unified [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nText processing framework: Parse / Transform / Compile.\n\nThis library provides the boilerplate to make parsing and compiling pluggable.\nIt’s in use by [**remark**][remark], [**retext**][retext], and [**hast**][hast].\n\n## Installation\n\n[npm][npm-install]:\n\n```bash\nnpm install unified\n```\n\n**unified** is also available as an AMD, CommonJS, and globals module,\n[uncompressed and compressed][releases].\n\n## Usage\n\nFrom [**remark**][remark-index]:\n\n```js\nvar unified = require('unified');\nvar Parser = require('./lib/parse.js');\nvar Compiler = require('./lib/stringify.js');\n\nmodule.exports = unified({\n    'name': 'mdast',\n    'Parser': Parser,\n    'Compiler': Compiler\n});\n```\n\n## Table of Contents\n\n*   [List of Processors](#list-of-processors)\n\n*   [Bridges](#bridges)\n\n*   [API](#api)\n\n    *   [unified(options)](#unifiedoptions)\n\n    *   [Processor(\\[processor\\])](#processorprocessor)\n\n    *   [processor.Parser](#processorparser)\n\n    *   [processor.Compiler](#processorcompiler)\n\n    *   [Processor#use(plugin\\[, input...\\])](#processoruseplugin-input)\n\n        *   [Plugin](#plugin)\n        *   [function attacher(processor\\[, input...\\])](#function-attacherprocessor-input)\n        *   [function transformer(node, file\\[, next\\])](#function-transformernode-file-next)\n\n    *   [Processor#parse(file\\[, options\\])](#processorparsefile-options)\n\n    *   [Processor#run(node\\[, file\\]\\[, done\\])](#processorrunnode-file-done)\n\n        *   [function done(err, node, file)](#function-doneerr-node-file)\n\n    *   [Processor#stringify(node\\[, file\\]\\[, options\\])](#processorstringifynode-file-options)\n\n    *   [Processor#process(file\\[, options\\]\\[, done\\])](#processorprocessfile-options-done)\n\n        *   [function done(err, doc, file)](#function-doneerr-doc-file)\n\n    *   [Processor#data](#processordata)\n\n*   [License](#license)\n\n## List of Processors\n\n*   [**remark**][remark]\n    — Markdown processor powered by plugins.\n\n*   [**retext**][retext]\n    — Extensible system for analysing and manipulating natural language.\n\n*   [**hast**][hast]\n    — HTML processor powered by plugins.\n\n## Bridges\n\nBridges are a concept which support two-way transformation between processors.\nSee [**unified-bridge**][unified-bridge] for more information.\n\n*   [**remark-retext**][remark-retext]\n    — Transformation from markdown to natural language (currently\n    it’s not possible to return to markdown);\n\n## API\n\n### `unified(options)`\n\nCreate a new `Processor` constructor.\n\n**Parameters** — `options` (`Object`):\n\n*   `name` (`string`) — Unique namespace, e.g. `'mdast'` or `'retext'`.\n\n*   `data` (`Object`, optional) — `JSON.stringify`able dictionary providing\n    information to `Parser`, `Compiler`, and plug-ins.\n\n*   `Parser` (`Function`) — Constructor which transforms a virtual file\n    into a syntax tree. When input is parsed, this function will be\n    constructed with a `file`, `settings`, and the processor. `Parser`\n    instances must have a `parse` method which returns a `node` (an object\n    with a `type` property).\n\n    The string representation of a file can be accessed by executing\n    `file.toString();`.\n\n*   `Compiler` (`Function`) — Constructor which transforms a node\n    into a string. When input is compiled, this function will be\n    constructed with a `file`, `settings`, and the processor. `Compiler`\n    instances must have a `compile` method which returns a `string`.\n\n    The syntax tree representation of a file can be accessed by executing\n    `file.namespace(name).tree`.\n\n**Returns** — `Function` (`Processor` constructor).\n\n### `Processor([processor])`\n\n> Note that all methods on the instance are also available as functions on the\n> constructor, which, when invoked, create a new instance.\n>\n> Thus, invoking `new Processor().process()` is the same as\n> `Processor.process()`.\n\nCreate a new `Processor` instance.\n\n**Parameters**\n\n*   `processor` (`Processor`, optional) — Uses all plug-ins available on the\n    reference processor instance, on the newly constructed processor instance.\n\n**Returns**\n\n`Processor`.\n\n### `processor.Parser`\n\n### `processor.Compiler`\n\nThe constructors passed to [`unified`][unified-options] at `'Parser'`\nand `'Compiler'` are stored on `Processor` instances. The `Parser`\nis responsible for parsing a virtual file into a syntax tree, and the\n`Compiler` for compiling a syntax tree into something else.\n\nWhen a processor is constructed, both are passed to [unherit][], which\nensures that plug-ins can change how the processor instance parses and\ncompiles without affecting other processors.\n\n`Parser`s must have a `parse` method, `Compiler`s a `compile` method.\n\n### `Processor#use(plugin[, input...])`\n\nChange the way the processor works by using a plugin.\n\n**Signatures**\n\n*   `processor.use(plugin[, input...])`;\n*   `processor.use(plugins[, input...])`;\n*   `processor.use(list)`;\n*   `processor.use(matrix)`.\n\n**Parameters**\n\n*   `plugin` (`Function`) — [Plugin][].\n\n*   `plugins` (`Array.<Function>`) — List of plugins.\n\n*   `list` (`Array`) — List where the first value is a `plugin`,\n    and further values are `input`;\n\n*   `matrix` (`Array`) — Matrix where each entry is a `list`.\n\n*   `input` (`*`) — Passed to plugin.  Specified by its documentation.\n\n**Returns**\n\n`Processor` — `this` (the context object).\n\n#### `Plugin`\n\nA **uniware** plugin changes the way the applied-on processor works. It does\ntwo things:\n\n*   It modifies the instance: such as changing the Parser or the Compiler;\n*   It transforms a syntax tree representation of a file.\n\nBoth have their own function. The first is called an [“attacher”][attacher].\nThe second is named a [“transformer”][transformer]. An “attacher” may return\na “transformer”.\n\n#### `function attacher(processor[, input...])`\n\nTo modify the processor, create an attacher. An attacher is the thing passed to\n[`use`][use]. It can receive plugin specific options, but that’s entirely up to\nthe third-party developer.\n\nAn **attacher** is invoked when the plugin is [`use`][use]d, and can return\na transformer which will be called on subsequent [`process()`][process]s and\n[`run()`][run]s.\n\n**Signatures**\n\n*   `transformer? = attacher(processor[, input...])`.\n\n**Parameters**\n\n*   `processor` (`Processor`) — Context on which the plugin was [`use`][use]d;\n*   `input` (`*`) — Passed by the user of a plug-in.\n\n**Returns**\n\n[`transformer`][transformer] (optional).\n\n#### `function transformer(node, file[, next])`\n\nTo transform a syntax tree, create a transformer. A transformer is a simple\n(generator) function which is invoked each time a file is\n[`process()`][process]s and [`run()`][run]s. A transformer should change\nthe syntax tree representation of a file.\n\n**Signatures**\n\n*   `err? = transformer(node, file)`;\n*   `transformer(node, file, next)`;\n*   `Promise.<null, Error> = transformer(node, file)`;\n*   `transformer*(node, file)`.\n\n**Parameters**\n\n*   `node` (`Node`) — Syntax tree representation of a file;\n\n*   `file` (`VFile`) — [Virtual file][vfile];\n\n*   `next` (`function([err])`, optional) — If the signature includes both\n    `next`, `transformer` **may** finish asynchronous, and **must**\n    invoke `next()` on completion with an optional error.\n\n**Returns** — Optionally:\n\n*   `Error` — Exception which will be thrown;\n\n*   `Promise.<null, Error>` — Promise which must be resolved or rejected\n    on completion.\n\n### `Processor#parse(file[, options])`\n\nParse a document into a syntax tree.\n\nWhen given a file, stores the returned node on that file.\n\n**Signatures**\n\n*   `node = processor.parse(file|value[, options])`.\n\n**Parameters**\n\n*   `file` (`VFile`) — [Virtual file][vfile].\n*   `value` (`string`) — String representation of a file.\n*   `options` (`Object`) — Configuration given to the parser.\n\n**Returns**\n\n`Node` — (`Object`).\n\n### `Processor#run(node[, file][, done])`\n\nTransform a syntax tree by applying plug-ins to it.\n\nEither a node or a file which was previously passed to `processor.parse()`,\nmust be given.\n\n**Signatures**\n\n*   `node = processor.run(node[, file|value][, done])`;\n*   `node = processor.run(file[, done])`.\n\n**Parameters**\n\n*   `node` (`Object`) — Syntax tree as returned by `parse()`;\n*   `file` (`VFile`) — [Virtual file][vfile].\n*   `value` (`string`) — String representation of a file.\n*   `done` ([`function done(err, node, file)`][run-done]).\n\n**Returns**\n\n`Node` — The given syntax tree node.\n\n**Throws**\n\nWhen no `node` was given and no node was found on the file.\n\n#### `function done(err, node, file)`\n\nInvoked when transformation is complete.\n\n**Signatures**\n\n*   `function done(err)`;\n*   `function done(null, node, file)`.\n\n**Parameters**\n\n*   `exception` (`Error`) — Failure;\n*   `doc` (`string`) — Document generated by the process;\n*   `file` (`File`) — File object representing the input file;\n\n### `Processor#stringify(node[, file][, options])`\n\nCompile a syntax tree into a document.\n\nEither a node or a file which was previously passed to `processor.parse()`,\nmust be given.\n\n**Signatures**\n\n*   `doc = processor.stringify(node[, file|value][, options])`;\n*   `doc = processor.stringify(file[, options])`.\n\n**Parameters**\n\n*   `node` (`Object`) — Syntax tree as returned by `parse()`;\n*   `file` (`VFile`) — [Virtual file][vfile].\n*   `value` (`string`) — String representation of a file.\n*   `options` (`Object`) — Configuration.\n\n**Returns**\n\n`doc` (`string`) — Document.\n\n**Throws**\n\nWhen no `node` was given and no node was found on the file.\n\n### `Processor#process(file[, options][, done])`\n\nParse / Transform / Compile. When an async transformer is used,\n`null` is returned and `done` must be given to receive the results\nupon completion.\n\n**Signatures**\n\n*   `doc = processor.process(file|value[, options][, done])`.\n\n**Parameters**\n\n*   `file` (`File`) — [Virtual file][vfile];\n*   `value` (`string`) — String representation of a file;\n*   `options` (`Object`) — Configuration.\n*   `done` ([`function done(err?, doc?, file?)`][process-done]).\n\n**Returns**\n\n`string` — Document generated by the process;\n\n#### `function done(err, doc, file)`\n\nInvoked when processing is complete.\n\n**Signatures**\n\n*   `function done(err)`;\n*   `function done(null, doc, file)`.\n\n**Parameters**\n\n*   `exception` (`Error`) — Failure;\n*   `doc` (`string`) — Document generated by the process;\n*   `file` (`File`) — File object representing the input file;\n\n### `Processor#data`\n\n`JSON.stringify`able dictionary providing information to `Parser`, `Compiler`,\nand plug-ins. Cloned when a `Processor` is constructed and to `processor.data`.\n\n**Type**: `Object`, optional.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/unified.svg\n\n[travis]: https://travis-ci.org/wooorm/unified\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/unified.svg\n\n[codecov]: https://codecov.io/github/wooorm/unified\n\n[npm-install]: https://docs.npmjs.com/cli/install\n\n[releases]: https://github.com/wooorm/unified/releases\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[remark]: https://github.com/wooorm/remark\n\n[retext]: https://github.com/wooorm/retext\n\n[hast]: https://github.com/wooorm/hast\n\n[unherit]: https://github.com/wooorm/unherit\n\n[vfile]: https://github.com/wooorm/vfile\n\n[unified-bridge]: https://github.com/wooorrm/unified-bridge\n\n[remark-retext]: https://github.com/wooorrm/remark-retext\n\n[remark-index]: https://github.com/wooorm/remark/blob/master/index.js\n\n[unified-options]: #unifiedoptions\n\n[plugin]: #plugin\n\n[attacher]: #function-attacherprocessor-input\n\n[transformer]: #function-transformernode-file-next\n\n[use]: #processoruseplugin-input\n\n[process]: #processorprocessfile-options-done\n\n[process-done]: #function-doneerr-doc-file\n\n[run]: #processorrunnode-file-done\n\n[run-done]: #function-doneerr-node-file\n","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"time":{"modified":"2016-02-13T13:11:24.331Z","created":"2015-07-31T09:33:35.699Z","1.0.0":"2015-07-31T09:33:35.699Z","2.0.0":"2015-09-16T11:51:57.961Z","2.1.0":"2015-10-10T15:18:29.036Z","2.1.1":"2015-10-14T18:19:18.664Z","2.1.2":"2015-10-23T20:20:14.313Z","2.1.3":"2016-01-24T08:20:25.265Z","2.1.4":"2016-01-24T08:25:37.665Z","3.0.0":"2016-02-13T13:11:24.331Z"},"homepage":"https://github.com/wooorm/unified#readme","keywords":["process","parse","transform","compile","stringify","hast","retext","remark"],"repository":{"type":"git","url":"git+https://github.com/wooorm/unified.git"},"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"},"bugs":{"url":"https://github.com/wooorm/unified/issues"},"license":"MIT","readmeFilename":"readme.md","contributors":[{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"}],"_attachments":{},"_etag":"\"BAL09R70ZDE3NSLNZF78PFGE7\""}