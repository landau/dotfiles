(function() {
  var Color, Palette;

  require('./helpers/matchers');

  Color = require('../lib/color');

  Palette = require('../lib/palette');

  describe('Palette', function() {
    var colors, createVar, palette, _ref;
    _ref = [], palette = _ref[0], colors = _ref[1];
    createVar = function(name, color, path, line) {
      return {
        name: name,
        color: color,
        path: path,
        line: line
      };
    };
    beforeEach(function() {
      colors = [createVar('red', new Color('#ff0000'), 'file.styl', 0), createVar('green', new Color('#00ff00'), 'file.styl', 1), createVar('blue', new Color('#0000ff'), 'file.styl', 2), createVar('redCopy', new Color('#ff0000'), 'file.styl', 3), createVar('red', new Color('#ff0000'), 'file2.styl', 0)];
      return palette = new Palette(colors);
    });
    describe('::getColorsCount', function() {
      return it('returns the number of colors in the palette', function() {
        return expect(palette.getColorsCount()).toEqual(5);
      });
    });
    describe('::getColorsNames', function() {
      return it('returns the names of the colors in the palette', function() {
        return expect(palette.getColorsNames()).toEqual(['red', 'green', 'blue', 'redCopy', 'red']);
      });
    });
    describe('::sortedByName', function() {
      return it('returns the colors and names sorted by name', function() {
        return expect(palette.sortedByName()).toEqual([colors[2], colors[1], colors[0], colors[4], colors[3]]);
      });
    });
    return describe('::sortedByColor', function() {
      return it('returns the colors and names sorted by colors', function() {
        return expect(palette.sortedByColor()).toEqual([colors[0], colors[3], colors[4], colors[1], colors[2]]);
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL1VzZXJzL3RsYW5kYXUvZG90ZmlsZXMvLmF0b20vcGFja2FnZXMvcGlnbWVudHMvc3BlYy9wYWxldHRlLXNwZWMuY29mZmVlIgogIF0sCiAgIm5hbWVzIjogW10sCiAgIm1hcHBpbmdzIjogIkFBQUE7QUFBQSxNQUFBLGNBQUE7O0FBQUEsRUFBQSxPQUFBLENBQVEsb0JBQVIsQ0FBQSxDQUFBOztBQUFBLEVBRUEsS0FBQSxHQUFRLE9BQUEsQ0FBUSxjQUFSLENBRlIsQ0FBQTs7QUFBQSxFQUdBLE9BQUEsR0FBVSxPQUFBLENBQVEsZ0JBQVIsQ0FIVixDQUFBOztBQUFBLEVBS0EsUUFBQSxDQUFTLFNBQVQsRUFBb0IsU0FBQSxHQUFBO0FBQ2xCLFFBQUEsZ0NBQUE7QUFBQSxJQUFBLE9BQW9CLEVBQXBCLEVBQUMsaUJBQUQsRUFBVSxnQkFBVixDQUFBO0FBQUEsSUFFQSxTQUFBLEdBQVksU0FBQyxJQUFELEVBQU8sS0FBUCxFQUFjLElBQWQsRUFBb0IsSUFBcEIsR0FBQTthQUNWO0FBQUEsUUFBQyxNQUFBLElBQUQ7QUFBQSxRQUFPLE9BQUEsS0FBUDtBQUFBLFFBQWMsTUFBQSxJQUFkO0FBQUEsUUFBb0IsTUFBQSxJQUFwQjtRQURVO0lBQUEsQ0FGWixDQUFBO0FBQUEsSUFLQSxVQUFBLENBQVcsU0FBQSxHQUFBO0FBQ1QsTUFBQSxNQUFBLEdBQVMsQ0FDUCxTQUFBLENBQVUsS0FBVixFQUFxQixJQUFBLEtBQUEsQ0FBTSxTQUFOLENBQXJCLEVBQXVDLFdBQXZDLEVBQW9ELENBQXBELENBRE8sRUFFUCxTQUFBLENBQVUsT0FBVixFQUF1QixJQUFBLEtBQUEsQ0FBTSxTQUFOLENBQXZCLEVBQXlDLFdBQXpDLEVBQXNELENBQXRELENBRk8sRUFHUCxTQUFBLENBQVUsTUFBVixFQUFzQixJQUFBLEtBQUEsQ0FBTSxTQUFOLENBQXRCLEVBQXdDLFdBQXhDLEVBQXFELENBQXJELENBSE8sRUFJUCxTQUFBLENBQVUsU0FBVixFQUF5QixJQUFBLEtBQUEsQ0FBTSxTQUFOLENBQXpCLEVBQTJDLFdBQTNDLEVBQXdELENBQXhELENBSk8sRUFLUCxTQUFBLENBQVUsS0FBVixFQUFxQixJQUFBLEtBQUEsQ0FBTSxTQUFOLENBQXJCLEVBQXVDLFlBQXZDLEVBQXFELENBQXJELENBTE8sQ0FBVCxDQUFBO2FBT0EsT0FBQSxHQUFjLElBQUEsT0FBQSxDQUFRLE1BQVIsRUFSTDtJQUFBLENBQVgsQ0FMQSxDQUFBO0FBQUEsSUFlQSxRQUFBLENBQVMsa0JBQVQsRUFBNkIsU0FBQSxHQUFBO2FBQzNCLEVBQUEsQ0FBRyw2Q0FBSCxFQUFrRCxTQUFBLEdBQUE7ZUFDaEQsTUFBQSxDQUFPLE9BQU8sQ0FBQyxjQUFSLENBQUEsQ0FBUCxDQUFnQyxDQUFDLE9BQWpDLENBQXlDLENBQXpDLEVBRGdEO01BQUEsQ0FBbEQsRUFEMkI7SUFBQSxDQUE3QixDQWZBLENBQUE7QUFBQSxJQW1CQSxRQUFBLENBQVMsa0JBQVQsRUFBNkIsU0FBQSxHQUFBO2FBQzNCLEVBQUEsQ0FBRyxnREFBSCxFQUFxRCxTQUFBLEdBQUE7ZUFDbkQsTUFBQSxDQUFPLE9BQU8sQ0FBQyxjQUFSLENBQUEsQ0FBUCxDQUFnQyxDQUFDLE9BQWpDLENBQXlDLENBQ3ZDLEtBRHVDLEVBRXZDLE9BRnVDLEVBR3ZDLE1BSHVDLEVBSXZDLFNBSnVDLEVBS3ZDLEtBTHVDLENBQXpDLEVBRG1EO01BQUEsQ0FBckQsRUFEMkI7SUFBQSxDQUE3QixDQW5CQSxDQUFBO0FBQUEsSUE2QkEsUUFBQSxDQUFTLGdCQUFULEVBQTJCLFNBQUEsR0FBQTthQUN6QixFQUFBLENBQUcsNkNBQUgsRUFBa0QsU0FBQSxHQUFBO2VBQ2hELE1BQUEsQ0FBTyxPQUFPLENBQUMsWUFBUixDQUFBLENBQVAsQ0FBOEIsQ0FBQyxPQUEvQixDQUF1QyxDQUNyQyxNQUFPLENBQUEsQ0FBQSxDQUQ4QixFQUVyQyxNQUFPLENBQUEsQ0FBQSxDQUY4QixFQUdyQyxNQUFPLENBQUEsQ0FBQSxDQUg4QixFQUlyQyxNQUFPLENBQUEsQ0FBQSxDQUo4QixFQUtyQyxNQUFPLENBQUEsQ0FBQSxDQUw4QixDQUF2QyxFQURnRDtNQUFBLENBQWxELEVBRHlCO0lBQUEsQ0FBM0IsQ0E3QkEsQ0FBQTtXQXVDQSxRQUFBLENBQVMsaUJBQVQsRUFBNEIsU0FBQSxHQUFBO2FBQzFCLEVBQUEsQ0FBRywrQ0FBSCxFQUFvRCxTQUFBLEdBQUE7ZUFDbEQsTUFBQSxDQUFPLE9BQU8sQ0FBQyxhQUFSLENBQUEsQ0FBUCxDQUErQixDQUFDLE9BQWhDLENBQXdDLENBQ3RDLE1BQU8sQ0FBQSxDQUFBLENBRCtCLEVBRXRDLE1BQU8sQ0FBQSxDQUFBLENBRitCLEVBR3RDLE1BQU8sQ0FBQSxDQUFBLENBSCtCLEVBSXRDLE1BQU8sQ0FBQSxDQUFBLENBSitCLEVBS3RDLE1BQU8sQ0FBQSxDQUFBLENBTCtCLENBQXhDLEVBRGtEO01BQUEsQ0FBcEQsRUFEMEI7SUFBQSxDQUE1QixFQXhDa0I7RUFBQSxDQUFwQixDQUxBLENBQUE7QUFBQSIKfQ==

//# sourceURL=/Users/tlandau/dotfiles/.atom/packages/pigments/spec/palette-spec.coffee
