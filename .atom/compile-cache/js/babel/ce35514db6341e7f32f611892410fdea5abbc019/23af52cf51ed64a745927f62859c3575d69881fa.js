'use babel';

MockDate = require('mockdate');

describe('Atom Clock', function () {

  var workspaceElement = undefined;

  beforeEach(function () {
    workspaceElement = atom.views.getView(atom.workspace);
    jasmine.attachToDOM(workspaceElement);
    MockDate.set('1987-04-11 04:00');

    var statusBar = undefined;
    var AtomClock = undefined;

    waitsForPromise(function () {
      return atom.packages.activatePackage('status-bar').then(function (pack) {
        statusBar = workspaceElement.querySelector('status-bar');
      });
    });

    waitsForPromise(function () {
      return atom.packages.activatePackage('atom-clock').then(function (clk) {
        AtomClock = clk.mainModule;
        AtomClock.consumeStatusBar(statusBar);
      });
    });

    waitsForPromise(function () {
      return atom.workspace.open();
    });
  });

  afterEach(function () {
    MockDate.reset();
  });

  it('should not show the clock icon by default', function () {
    icon = workspaceElement.querySelector('.atom-clock > .icon-clock');
    expect(icon).toBeNull();
  });

  it('should show the clock icon when configured', function () {
    atom.config.set('atom-clock.showClockIcon', true);
    icon = workspaceElement.querySelector('.atom-clock > .icon-clock');
    expect(icon).not.toBeNull();
  });

  it('should show the time with the default format', function () {
    date = workspaceElement.querySelector('.atom-clock > span').innerText;
    expect(date).toBe('4:00');
  });

  it('should change the format of displayed time', function () {
    atom.config.set('atom-clock.dateFormat', 'H:mm:ss');
    date = workspaceElement.querySelector('.atom-clock > span').innerText;
    expect(date).toBe('4:00:00');

    atom.config.set('atom-clock.dateFormat', 'DD dddd YY H:mm');
    date = workspaceElement.querySelector('.atom-clock > span').innerText;
    expect(date.toLowerCase()).toBe('11 saturday 87 4:00');
  });

  it('should change the clock content according with the locale', function () {
    atom.config.set('atom-clock.dateFormat', 'DD dddd YY H:mm');
    atom.config.set('atom-clock.locale', 'it');
    date = workspaceElement.querySelector('.atom-clock > span').innerText;
    expect(date.toLowerCase()).toBe('11 sabato 87 4:00');
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy90bGFuZGF1Ly5hdG9tL3BhY2thZ2VzL2F0b20tY2xvY2svc3BlYy9hdG9tLWNsb2NrLXZpZXctc3BlYy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxXQUFXLENBQUM7O0FBRVosUUFBUSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQTs7QUFFOUIsUUFBUSxDQUFDLFlBQVksRUFBRSxZQUFNOztBQUUzQixNQUFJLGdCQUFnQixZQUFBLENBQUE7O0FBRXBCLFlBQVUsQ0FBQyxZQUFNO0FBQ2Ysb0JBQWdCLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO0FBQ3JELFdBQU8sQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsQ0FBQTtBQUNyQyxZQUFRLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFDLENBQUE7O0FBRWhDLFFBQUksU0FBUyxZQUFBLENBQUE7QUFDYixRQUFJLFNBQVMsWUFBQSxDQUFBOztBQUViLG1CQUFlLENBQUM7YUFBTSxJQUFJLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxZQUFZLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQyxJQUFJLEVBQUs7QUFDL0UsaUJBQVMsR0FBRyxnQkFBZ0IsQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDLENBQUE7T0FDekQsQ0FBQztLQUFBLENBQUMsQ0FBQTs7QUFFSCxtQkFBZSxDQUFDO2FBQU0sSUFBSSxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsWUFBWSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUMsR0FBRyxFQUFLO0FBQzlFLGlCQUFTLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQTtBQUMxQixpQkFBUyxDQUFDLGdCQUFnQixDQUFDLFNBQVMsQ0FBQyxDQUFBO09BQ3RDLENBQUM7S0FBQSxDQUFDLENBQUE7O0FBRUgsbUJBQWUsQ0FBQzthQUFNLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFO0tBQUEsQ0FBQyxDQUFBO0dBQzdDLENBQUMsQ0FBQTs7QUFFRixXQUFTLENBQUMsWUFBTTtBQUNkLFlBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQTtHQUNqQixDQUFDLENBQUE7O0FBRUYsSUFBRSxDQUFDLDJDQUEyQyxFQUFFLFlBQU07QUFDcEQsUUFBSSxHQUFHLGdCQUFnQixDQUFDLGFBQWEsQ0FBQywyQkFBMkIsQ0FBQyxDQUFBO0FBQ2xFLFVBQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQTtHQUN4QixDQUFDLENBQUE7O0FBRUYsSUFBRSxDQUFDLDRDQUE0QyxFQUFFLFlBQU07QUFDckQsUUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsMEJBQTBCLEVBQUUsSUFBSSxDQUFDLENBQUE7QUFDakQsUUFBSSxHQUFHLGdCQUFnQixDQUFDLGFBQWEsQ0FBQywyQkFBMkIsQ0FBQyxDQUFBO0FBQ2xFLFVBQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUE7R0FDNUIsQ0FBQyxDQUFBOztBQUVGLElBQUUsQ0FBQyw4Q0FBOEMsRUFBRSxZQUFNO0FBQ3ZELFFBQUksR0FBRyxnQkFBZ0IsQ0FBQyxhQUFhLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxTQUFTLENBQUE7QUFDckUsVUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQTtHQUMxQixDQUFDLENBQUE7O0FBRUYsSUFBRSxDQUFDLDRDQUE0QyxFQUFFLFlBQU07QUFDckQsUUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsdUJBQXVCLEVBQUUsU0FBUyxDQUFDLENBQUE7QUFDbkQsUUFBSSxHQUFHLGdCQUFnQixDQUFDLGFBQWEsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLFNBQVMsQ0FBQTtBQUNyRSxVQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBOztBQUU1QixRQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyx1QkFBdUIsRUFBRSxpQkFBaUIsQ0FBQyxDQUFBO0FBQzNELFFBQUksR0FBRyxnQkFBZ0IsQ0FBQyxhQUFhLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxTQUFTLENBQUE7QUFDckUsVUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxDQUFBO0dBQ3ZELENBQUMsQ0FBQTs7QUFFRixJQUFFLENBQUMsMkRBQTJELEVBQUUsWUFBTTtBQUNwRSxRQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyx1QkFBdUIsRUFBRSxpQkFBaUIsQ0FBQyxDQUFBO0FBQzNELFFBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLG1CQUFtQixFQUFFLElBQUksQ0FBQyxDQUFBO0FBQzFDLFFBQUksR0FBRyxnQkFBZ0IsQ0FBQyxhQUFhLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxTQUFTLENBQUE7QUFDckUsVUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFBO0dBQ3JELENBQUMsQ0FBQTtDQUVILENBQUMsQ0FBQSIsImZpbGUiOiIvVXNlcnMvdGxhbmRhdS8uYXRvbS9wYWNrYWdlcy9hdG9tLWNsb2NrL3NwZWMvYXRvbS1jbG9jay12aWV3LXNwZWMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGJhYmVsJztcblxuTW9ja0RhdGUgPSByZXF1aXJlKCdtb2NrZGF0ZScpXG5cbmRlc2NyaWJlKCdBdG9tIENsb2NrJywgKCkgPT4ge1xuXG4gIGxldCB3b3Jrc3BhY2VFbGVtZW50XG5cbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgd29ya3NwYWNlRWxlbWVudCA9IGF0b20udmlld3MuZ2V0VmlldyhhdG9tLndvcmtzcGFjZSlcbiAgICBqYXNtaW5lLmF0dGFjaFRvRE9NKHdvcmtzcGFjZUVsZW1lbnQpXG4gICAgTW9ja0RhdGUuc2V0KCcxOTg3LTA0LTExIDA0OjAwJylcblxuICAgIGxldCBzdGF0dXNCYXJcbiAgICBsZXQgQXRvbUNsb2NrXG5cbiAgICB3YWl0c0ZvclByb21pc2UoKCkgPT4gYXRvbS5wYWNrYWdlcy5hY3RpdmF0ZVBhY2thZ2UoJ3N0YXR1cy1iYXInKS50aGVuKChwYWNrKSA9PiB7XG4gICAgICBzdGF0dXNCYXIgPSB3b3Jrc3BhY2VFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ3N0YXR1cy1iYXInKVxuICAgIH0pKVxuXG4gICAgd2FpdHNGb3JQcm9taXNlKCgpID0+IGF0b20ucGFja2FnZXMuYWN0aXZhdGVQYWNrYWdlKCdhdG9tLWNsb2NrJykudGhlbigoY2xrKSA9PiB7XG4gICAgICBBdG9tQ2xvY2sgPSBjbGsubWFpbk1vZHVsZVxuICAgICAgQXRvbUNsb2NrLmNvbnN1bWVTdGF0dXNCYXIoc3RhdHVzQmFyKVxuICAgIH0pKVxuXG4gICAgd2FpdHNGb3JQcm9taXNlKCgpID0+IGF0b20ud29ya3NwYWNlLm9wZW4oKSlcbiAgfSlcblxuICBhZnRlckVhY2goKCkgPT4ge1xuICAgIE1vY2tEYXRlLnJlc2V0KClcbiAgfSlcblxuICBpdCgnc2hvdWxkIG5vdCBzaG93IHRoZSBjbG9jayBpY29uIGJ5IGRlZmF1bHQnLCAoKSA9PiB7XG4gICAgaWNvbiA9IHdvcmtzcGFjZUVsZW1lbnQucXVlcnlTZWxlY3RvcignLmF0b20tY2xvY2sgPiAuaWNvbi1jbG9jaycpXG4gICAgZXhwZWN0KGljb24pLnRvQmVOdWxsKClcbiAgfSlcblxuICBpdCgnc2hvdWxkIHNob3cgdGhlIGNsb2NrIGljb24gd2hlbiBjb25maWd1cmVkJywgKCkgPT4ge1xuICAgIGF0b20uY29uZmlnLnNldCgnYXRvbS1jbG9jay5zaG93Q2xvY2tJY29uJywgdHJ1ZSlcbiAgICBpY29uID0gd29ya3NwYWNlRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuYXRvbS1jbG9jayA+IC5pY29uLWNsb2NrJylcbiAgICBleHBlY3QoaWNvbikubm90LnRvQmVOdWxsKClcbiAgfSlcblxuICBpdCgnc2hvdWxkIHNob3cgdGhlIHRpbWUgd2l0aCB0aGUgZGVmYXVsdCBmb3JtYXQnLCAoKSA9PiB7XG4gICAgZGF0ZSA9IHdvcmtzcGFjZUVsZW1lbnQucXVlcnlTZWxlY3RvcignLmF0b20tY2xvY2sgPiBzcGFuJykuaW5uZXJUZXh0XG4gICAgZXhwZWN0KGRhdGUpLnRvQmUoJzQ6MDAnKVxuICB9KVxuXG4gIGl0KCdzaG91bGQgY2hhbmdlIHRoZSBmb3JtYXQgb2YgZGlzcGxheWVkIHRpbWUnLCAoKSA9PiB7XG4gICAgYXRvbS5jb25maWcuc2V0KCdhdG9tLWNsb2NrLmRhdGVGb3JtYXQnLCAnSDptbTpzcycpXG4gICAgZGF0ZSA9IHdvcmtzcGFjZUVsZW1lbnQucXVlcnlTZWxlY3RvcignLmF0b20tY2xvY2sgPiBzcGFuJykuaW5uZXJUZXh0XG4gICAgZXhwZWN0KGRhdGUpLnRvQmUoJzQ6MDA6MDAnKVxuXG4gICAgYXRvbS5jb25maWcuc2V0KCdhdG9tLWNsb2NrLmRhdGVGb3JtYXQnLCAnREQgZGRkZCBZWSBIOm1tJylcbiAgICBkYXRlID0gd29ya3NwYWNlRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuYXRvbS1jbG9jayA+IHNwYW4nKS5pbm5lclRleHRcbiAgICBleHBlY3QoZGF0ZS50b0xvd2VyQ2FzZSgpKS50b0JlKCcxMSBzYXR1cmRheSA4NyA0OjAwJylcbiAgfSlcblxuICBpdCgnc2hvdWxkIGNoYW5nZSB0aGUgY2xvY2sgY29udGVudCBhY2NvcmRpbmcgd2l0aCB0aGUgbG9jYWxlJywgKCkgPT4ge1xuICAgIGF0b20uY29uZmlnLnNldCgnYXRvbS1jbG9jay5kYXRlRm9ybWF0JywgJ0REIGRkZGQgWVkgSDptbScpXG4gICAgYXRvbS5jb25maWcuc2V0KCdhdG9tLWNsb2NrLmxvY2FsZScsICdpdCcpXG4gICAgZGF0ZSA9IHdvcmtzcGFjZUVsZW1lbnQucXVlcnlTZWxlY3RvcignLmF0b20tY2xvY2sgPiBzcGFuJykuaW5uZXJUZXh0XG4gICAgZXhwZWN0KGRhdGUudG9Mb3dlckNhc2UoKSkudG9CZSgnMTEgc2FiYXRvIDg3IDQ6MDAnKVxuICB9KVxuXG59KVxuIl19