'use babel';

/* global atom */

Object.defineProperty(exports, '__esModule', {
  value: true
});
var getNodeLength = function getNodeLength(node) {
  if (!node) return 1;
  if (node.kind === 'VariableDefinition') {
    return node.variable.name.value.length + 1;
  } else if (node.kind === 'Variable') {
    return node.name.value.length + 1;
  } else if (node.kind === 'Field') {
    return node.name.value.length;
  } else if (node.kind === 'Argument') {
    return node.name.value.length;
  } else {
    return node.loc.end - node.loc.start;
  }
};

var replaceTag = function replaceTag(content) {
  if (!atom.config.get('graphql-autocomplete.disableErrors.templateString')) return content;
  return content.replace(/(?:...)?\${\w+}/g, '');
};

exports['default'] = function (_ref) {
  var content = _ref.content;
  var fileContent = _ref.fileContent;
  var location = _ref.location;
  var node = _ref.node;

  var newFileContent = replaceTag(fileContent);
  var prefix = newFileContent.split(content)[0];
  var lines = prefix.split('\n');
  var line = lines.length + 1;
  var finalLine = line + location.line - 3;
  var column = location.line === 1 ? lines[lines.length - 1].length : 0;
  var startFinalColumn = column + location.column - 1;
  var length = getNodeLength(node);
  var endFinalColumn = startFinalColumn + length;
  if (node && node.alias && node.alias.value) {
    startFinalColumn += node.alias.value.length + 2;
  }

  return [[finalLine, startFinalColumn], [finalLine, endFinalColumn]];
};

module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy90bGFuZGF1L2RvdGZpbGVzLy5hdG9tL3BhY2thZ2VzL2dyYXBocWwtYXV0b2NvbXBsZXRlL2xpYi9MaW50ZXIvZ2V0UmFuZ2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxDQUFBOzs7Ozs7O0FBSVgsSUFBTSxhQUFhLEdBQUcsU0FBaEIsYUFBYSxDQUFhLElBQUksRUFBRTtBQUNwQyxNQUFJLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFBO0FBQ25CLE1BQUksSUFBSSxDQUFDLElBQUksS0FBSyxvQkFBb0IsRUFBRTtBQUN0QyxXQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFBO0dBQzNDLE1BQU0sSUFBSSxJQUFJLENBQUMsSUFBSSxLQUFLLFVBQVUsRUFBRTtBQUNuQyxXQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUE7R0FDbEMsTUFBTSxJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssT0FBTyxFQUFFO0FBQ2hDLFdBQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFBO0dBQzlCLE1BQU0sSUFBSSxJQUFJLENBQUMsSUFBSSxLQUFLLFVBQVUsRUFBRTtBQUNuQyxXQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQTtHQUM5QixNQUFNO0FBQ0wsV0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQTtHQUNyQztDQUNGLENBQUE7O0FBRUQsSUFBTSxVQUFVLEdBQUcsU0FBYixVQUFVLENBQWEsT0FBTyxFQUFFO0FBQ3BDLE1BQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxtREFBbUQsQ0FBQyxFQUFFLE9BQU8sT0FBTyxDQUFBO0FBQ3pGLFNBQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsRUFBRSxFQUFFLENBQUMsQ0FBQTtDQUMvQyxDQUFBOztxQkFFYyxVQUFVLElBQXNDLEVBQUU7TUFBdkMsT0FBTyxHQUFSLElBQXNDLENBQXJDLE9BQU87TUFBRSxXQUFXLEdBQXJCLElBQXNDLENBQTVCLFdBQVc7TUFBRSxRQUFRLEdBQS9CLElBQXNDLENBQWYsUUFBUTtNQUFFLElBQUksR0FBckMsSUFBc0MsQ0FBTCxJQUFJOztBQUM1RCxNQUFNLGNBQWMsR0FBRyxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUE7QUFDOUMsTUFBTSxNQUFNLEdBQUcsY0FBYyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtBQUMvQyxNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFBO0FBQ2hDLE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFBO0FBQzdCLE1BQU0sU0FBUyxHQUFHLElBQUksR0FBRyxRQUFRLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQTtBQUMxQyxNQUFNLE1BQU0sR0FBRyxRQUFRLENBQUMsSUFBSSxLQUFLLENBQUMsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFBO0FBQ3ZFLE1BQUksZ0JBQWdCLEdBQUcsTUFBTSxHQUFHLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFBO0FBQ25ELE1BQUksTUFBTSxHQUFHLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQTtBQUNoQyxNQUFNLGNBQWMsR0FBRyxnQkFBZ0IsR0FBRyxNQUFNLENBQUE7QUFDaEQsTUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRTtBQUMxQyxvQkFBZ0IsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFBO0dBQ2hEOztBQUVELFNBQU8sQ0FDTCxDQUFDLFNBQVMsRUFBRSxnQkFBZ0IsQ0FBQyxFQUM3QixDQUFDLFNBQVMsRUFBRSxjQUFjLENBQUMsQ0FDNUIsQ0FBQTtDQUNGIiwiZmlsZSI6Ii9Vc2Vycy90bGFuZGF1L2RvdGZpbGVzLy5hdG9tL3BhY2thZ2VzL2dyYXBocWwtYXV0b2NvbXBsZXRlL2xpYi9MaW50ZXIvZ2V0UmFuZ2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGJhYmVsJ1xuXG4vKiBnbG9iYWwgYXRvbSAqL1xuXG5jb25zdCBnZXROb2RlTGVuZ3RoID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgaWYgKCFub2RlKSByZXR1cm4gMVxuICBpZiAobm9kZS5raW5kID09PSAnVmFyaWFibGVEZWZpbml0aW9uJykge1xuICAgIHJldHVybiBub2RlLnZhcmlhYmxlLm5hbWUudmFsdWUubGVuZ3RoICsgMVxuICB9IGVsc2UgaWYgKG5vZGUua2luZCA9PT0gJ1ZhcmlhYmxlJykge1xuICAgIHJldHVybiBub2RlLm5hbWUudmFsdWUubGVuZ3RoICsgMVxuICB9IGVsc2UgaWYgKG5vZGUua2luZCA9PT0gJ0ZpZWxkJykge1xuICAgIHJldHVybiBub2RlLm5hbWUudmFsdWUubGVuZ3RoXG4gIH0gZWxzZSBpZiAobm9kZS5raW5kID09PSAnQXJndW1lbnQnKSB7XG4gICAgcmV0dXJuIG5vZGUubmFtZS52YWx1ZS5sZW5ndGhcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gbm9kZS5sb2MuZW5kIC0gbm9kZS5sb2Muc3RhcnRcbiAgfVxufVxuXG5jb25zdCByZXBsYWNlVGFnID0gZnVuY3Rpb24gKGNvbnRlbnQpIHtcbiAgaWYgKCFhdG9tLmNvbmZpZy5nZXQoJ2dyYXBocWwtYXV0b2NvbXBsZXRlLmRpc2FibGVFcnJvcnMudGVtcGxhdGVTdHJpbmcnKSkgcmV0dXJuIGNvbnRlbnRcbiAgcmV0dXJuIGNvbnRlbnQucmVwbGFjZSgvKD86Li4uKT9cXCR7XFx3K30vZywgJycpXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uICh7Y29udGVudCwgZmlsZUNvbnRlbnQsIGxvY2F0aW9uLCBub2RlfSkge1xuICBjb25zdCBuZXdGaWxlQ29udGVudCA9IHJlcGxhY2VUYWcoZmlsZUNvbnRlbnQpXG4gIGNvbnN0IHByZWZpeCA9IG5ld0ZpbGVDb250ZW50LnNwbGl0KGNvbnRlbnQpWzBdXG4gIGNvbnN0IGxpbmVzID0gcHJlZml4LnNwbGl0KCdcXG4nKVxuICBjb25zdCBsaW5lID0gbGluZXMubGVuZ3RoICsgMVxuICBjb25zdCBmaW5hbExpbmUgPSBsaW5lICsgbG9jYXRpb24ubGluZSAtIDNcbiAgY29uc3QgY29sdW1uID0gbG9jYXRpb24ubGluZSA9PT0gMSA/IGxpbmVzW2xpbmVzLmxlbmd0aCAtIDFdLmxlbmd0aCA6IDBcbiAgbGV0IHN0YXJ0RmluYWxDb2x1bW4gPSBjb2x1bW4gKyBsb2NhdGlvbi5jb2x1bW4gLSAxXG4gIGxldCBsZW5ndGggPSBnZXROb2RlTGVuZ3RoKG5vZGUpXG4gIGNvbnN0IGVuZEZpbmFsQ29sdW1uID0gc3RhcnRGaW5hbENvbHVtbiArIGxlbmd0aFxuICBpZiAobm9kZSAmJiBub2RlLmFsaWFzICYmIG5vZGUuYWxpYXMudmFsdWUpIHtcbiAgICBzdGFydEZpbmFsQ29sdW1uICs9IG5vZGUuYWxpYXMudmFsdWUubGVuZ3RoICsgMlxuICB9XG5cbiAgcmV0dXJuIFtcbiAgICBbZmluYWxMaW5lLCBzdGFydEZpbmFsQ29sdW1uXSxcbiAgICBbZmluYWxMaW5lLCBlbmRGaW5hbENvbHVtbl1cbiAgXVxufVxuIl19