function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _tinycolor2 = require('tinycolor2');

var _tinycolor22 = _interopRequireDefault(_tinycolor2);

var _helperWriteConfigFile = require('../helper/write-config-file');

var _helperWriteConfigFile2 = _interopRequireDefault(_helperWriteConfigFile);

var _helperToggleClassName = require('../helper/toggle-class-name');

var _helperToggleClassName2 = _interopRequireDefault(_helperToggleClassName);

var _helperToCamelCase = require('../helper/to-camel-case');

var _helperToCamelCase2 = _interopRequireDefault(_helperToCamelCase);

var _colorTemplatesJson = require('../color-templates.json');

var _colorTemplatesJson2 = _interopRequireDefault(_colorTemplatesJson);

var _buildColorSettings = require('./build-color-settings');

var _buildColorSettings2 = _interopRequireDefault(_buildColorSettings);

'use babel';

atom.config.observe('atom-material-ui.colors.abaseColor', function (color) {
    var baseColor = typeof color === 'object' ? (0, _tinycolor22['default'])(color.toHexString()) : (0, _tinycolor22['default'])(color);

    if (atom.config.get('atom-material-ui.colors.genAccent')) {
        var accentColor = baseColor.complement().saturate(20).lighten(5);
        return atom.config.set('atom-material-ui.colors.accentColor', accentColor.toRgbString());
    }

    return (0, _helperWriteConfigFile2['default'])((0, _buildColorSettings2['default'])(color, atom.config.get('atom-material-ui.colors.accentColor')), true);
});

atom.config.onDidChange('atom-material-ui.colors.predefinedColor', function (value) {
    var newValue = (0, _helperToCamelCase2['default'])(value.newValue);

    atom.config.set('atom-material-ui.colors.abaseColor', _colorTemplatesJson2['default'][newValue].base);
    atom.config.set('atom-material-ui.colors.accentColor', _colorTemplatesJson2['default'][newValue].accent);
});

atom.config.observe('atom-material-ui.colors.accentColor', function (color) {
    return (0, _helperWriteConfigFile2['default'])((0, _buildColorSettings2['default'])(atom.config.get('atom-material-ui.colors.abaseColor'), color), true);
});

atom.config.observe('atom-material-ui.colors.paintCursor', function (value) {
    return (0, _helperToggleClassName2['default'])('amu-paint-cursor', value);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy90bGFuZGF1Ly5hdG9tL3BhY2thZ2VzL2F0b20tbWF0ZXJpYWwtdWkvbGliL2NvbG9ycy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzswQkFFc0IsWUFBWTs7OztxQ0FDTiw2QkFBNkI7Ozs7cUNBQzdCLDZCQUE2Qjs7OztpQ0FDakMseUJBQXlCOzs7O2tDQUN0Qix5QkFBeUI7Ozs7a0NBQ3JCLHdCQUF3Qjs7OztBQVB2RCxXQUFXLENBQUM7O0FBU1osSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsb0NBQW9DLEVBQUUsVUFBQyxLQUFLLEVBQUs7QUFDakUsUUFBTSxTQUFTLEdBQUcsQUFBQyxPQUFPLEtBQUssS0FBSyxRQUFRLEdBQUksNkJBQVUsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDLEdBQUcsNkJBQVUsS0FBSyxDQUFDLENBQUM7O0FBRWxHLFFBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsbUNBQW1DLENBQUMsRUFBRTtBQUN0RCxZQUFNLFdBQVcsR0FBRyxTQUFTLENBQUMsVUFBVSxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNuRSxlQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLHFDQUFxQyxFQUFFLFdBQVcsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO0tBQzVGOztBQUVELFdBQU8sd0NBQ0gscUNBQ0ksS0FBSyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLHFDQUFxQyxDQUFDLENBQ2hFLEVBQ0QsSUFBSSxDQUNQLENBQUM7Q0FDTCxDQUFDLENBQUM7O0FBRUgsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMseUNBQXlDLEVBQUUsVUFBQyxLQUFLLEVBQUs7QUFDMUUsUUFBTSxRQUFRLEdBQUcsb0NBQVksS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDOztBQUU3QyxRQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxvQ0FBb0MsRUFBRSxnQ0FBZSxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNyRixRQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxxQ0FBcUMsRUFBRSxnQ0FBZSxRQUFRLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztDQUMzRixDQUFDLENBQUM7O0FBRUgsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMscUNBQXFDLEVBQUUsVUFBQSxLQUFLO1dBQzVELHdDQUNJLHFDQUNJLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLG9DQUFvQyxDQUFDLEVBQUUsS0FBSyxDQUMvRCxFQUNELElBQUksQ0FDUDtDQUNKLENBQUMsQ0FBQzs7QUFFSCxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxxQ0FBcUMsRUFBRSxVQUFBLEtBQUs7V0FBSSx3Q0FBZ0Isa0JBQWtCLEVBQUUsS0FBSyxDQUFDO0NBQUEsQ0FBQyxDQUFDIiwiZmlsZSI6Ii9Vc2Vycy90bGFuZGF1Ly5hdG9tL3BhY2thZ2VzL2F0b20tbWF0ZXJpYWwtdWkvbGliL2NvbG9ycy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2UgYmFiZWwnO1xuXG5pbXBvcnQgdGlueWNvbG9yIGZyb20gJ3Rpbnljb2xvcjInO1xuaW1wb3J0IHdyaXRlQ29uZmlnRmlsZSBmcm9tICcuLi9oZWxwZXIvd3JpdGUtY29uZmlnLWZpbGUnO1xuaW1wb3J0IHRvZ2dsZUNsYXNzTmFtZSBmcm9tICcuLi9oZWxwZXIvdG9nZ2xlLWNsYXNzLW5hbWUnO1xuaW1wb3J0IHRvQ2FtZWxDYXNlIGZyb20gJy4uL2hlbHBlci90by1jYW1lbC1jYXNlJztcbmltcG9ydCBjb2xvclRlbXBsYXRlcyBmcm9tICcuLi9jb2xvci10ZW1wbGF0ZXMuanNvbic7XG5pbXBvcnQgYnVpbGRDb2xvclNldHRpbmdzIGZyb20gJy4vYnVpbGQtY29sb3Itc2V0dGluZ3MnO1xuXG5hdG9tLmNvbmZpZy5vYnNlcnZlKCdhdG9tLW1hdGVyaWFsLXVpLmNvbG9ycy5hYmFzZUNvbG9yJywgKGNvbG9yKSA9PiB7XG4gICAgY29uc3QgYmFzZUNvbG9yID0gKHR5cGVvZiBjb2xvciA9PT0gJ29iamVjdCcpID8gdGlueWNvbG9yKGNvbG9yLnRvSGV4U3RyaW5nKCkpIDogdGlueWNvbG9yKGNvbG9yKTtcblxuICAgIGlmIChhdG9tLmNvbmZpZy5nZXQoJ2F0b20tbWF0ZXJpYWwtdWkuY29sb3JzLmdlbkFjY2VudCcpKSB7XG4gICAgICAgIGNvbnN0IGFjY2VudENvbG9yID0gYmFzZUNvbG9yLmNvbXBsZW1lbnQoKS5zYXR1cmF0ZSgyMCkubGlnaHRlbig1KTtcbiAgICAgICAgcmV0dXJuIGF0b20uY29uZmlnLnNldCgnYXRvbS1tYXRlcmlhbC11aS5jb2xvcnMuYWNjZW50Q29sb3InLCBhY2NlbnRDb2xvci50b1JnYlN0cmluZygpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gd3JpdGVDb25maWdGaWxlKFxuICAgICAgICBidWlsZENvbG9yU2V0dGluZ3MoXG4gICAgICAgICAgICBjb2xvciwgYXRvbS5jb25maWcuZ2V0KCdhdG9tLW1hdGVyaWFsLXVpLmNvbG9ycy5hY2NlbnRDb2xvcicpLFxuICAgICAgICApLFxuICAgICAgICB0cnVlLFxuICAgICk7XG59KTtcblxuYXRvbS5jb25maWcub25EaWRDaGFuZ2UoJ2F0b20tbWF0ZXJpYWwtdWkuY29sb3JzLnByZWRlZmluZWRDb2xvcicsICh2YWx1ZSkgPT4ge1xuICAgIGNvbnN0IG5ld1ZhbHVlID0gdG9DYW1lbENhc2UodmFsdWUubmV3VmFsdWUpO1xuXG4gICAgYXRvbS5jb25maWcuc2V0KCdhdG9tLW1hdGVyaWFsLXVpLmNvbG9ycy5hYmFzZUNvbG9yJywgY29sb3JUZW1wbGF0ZXNbbmV3VmFsdWVdLmJhc2UpO1xuICAgIGF0b20uY29uZmlnLnNldCgnYXRvbS1tYXRlcmlhbC11aS5jb2xvcnMuYWNjZW50Q29sb3InLCBjb2xvclRlbXBsYXRlc1tuZXdWYWx1ZV0uYWNjZW50KTtcbn0pO1xuXG5hdG9tLmNvbmZpZy5vYnNlcnZlKCdhdG9tLW1hdGVyaWFsLXVpLmNvbG9ycy5hY2NlbnRDb2xvcicsIGNvbG9yID0+IChcbiAgICB3cml0ZUNvbmZpZ0ZpbGUoXG4gICAgICAgIGJ1aWxkQ29sb3JTZXR0aW5ncyhcbiAgICAgICAgICAgIGF0b20uY29uZmlnLmdldCgnYXRvbS1tYXRlcmlhbC11aS5jb2xvcnMuYWJhc2VDb2xvcicpLCBjb2xvcixcbiAgICAgICAgKSxcbiAgICAgICAgdHJ1ZSxcbiAgICApXG4pKTtcblxuYXRvbS5jb25maWcub2JzZXJ2ZSgnYXRvbS1tYXRlcmlhbC11aS5jb2xvcnMucGFpbnRDdXJzb3InLCB2YWx1ZSA9PiB0b2dnbGVDbGFzc05hbWUoJ2FtdS1wYWludC1jdXJzb3InLCB2YWx1ZSkpO1xuIl19