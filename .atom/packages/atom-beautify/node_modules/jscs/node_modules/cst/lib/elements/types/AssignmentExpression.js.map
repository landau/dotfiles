{"version":3,"sources":["../../../src/elements/types/AssignmentExpression.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA,IAAM,sBAAsB;AACxB,SAAK,IAAL;AACA,UAAM,IAAN;AACA,UAAM,IAAN;AACA,UAAM,IAAN;AACA,UAAM,IAAN;AACA,UAAM,IAAN;AACA,WAAO,IAAP;AACA,WAAO,IAAP;AACA,YAAQ,IAAR;AACA,UAAM,IAAN;AACA,UAAM,IAAN;AACA,UAAM,IAAN;AACA,WAAO,IAAP;CAbE;;IAgBe;;;AACjB,aADiB,oBACjB,CAAY,UAAZ,EAAwB;4CADP,sBACO;4FADP,iCAEP,wBAAwB,aADV;KAAxB;;+BADiB;;wCAKD,UAAU;AACtB,gBAAI,OAAO,SAAS,cAAT,EAAP,CADkB;AAEtB,qBAAS,WAAT,GAFsB;AAGtB,qBAAS,WAAT,CAAqB,YAArB,EAAmC,mBAAnC,EAHsB;AAItB,gBAAI,WAAW,SAAS,cAAT,CAAwB,KAAxB,CAJO;AAKtB,qBAAS,QAAT,GALsB;AAMtB,qBAAS,WAAT,GANsB;AAOtB,gBAAI,QAAQ,SAAS,cAAT,EAAR,CAPkB;AAQtB,qBAAS,SAAT,GARsB;;AAUtB,iBAAK,IAAL,GAAY,IAAZ,CAVsB;AAWtB,iBAAK,QAAL,GAAgB,QAAhB,CAXsB;AAYtB,iBAAK,KAAL,GAAa,KAAb,CAZsB;;;WALT","file":"AssignmentExpression.js","sourcesContent":["import Expression from '../Expression';\n\nconst assignmentOperators = {\n    '=': true,\n    '+=': true,\n    '-=': true,\n    '*=': true,\n    '/=': true,\n    '%=': true,\n    '<<=': true,\n    '>>=': true,\n    '>>>=': true,\n    '|=': true,\n    '^=': true,\n    '&=': true,\n    '**=': true\n};\n\nexport default class AssignmentExpression extends Expression {\n    constructor(childNodes) {\n        super('AssignmentExpression', childNodes);\n    }\n\n    _acceptChildren(children) {\n        let left = children.passAssignable();\n        children.skipNonCode();\n        children.assertToken('Punctuator', assignmentOperators);\n        let operator = children.currentElement.value;\n        children.moveNext();\n        children.skipNonCode();\n        let right = children.passExpression();\n        children.assertEnd();\n\n        this.left = left;\n        this.operator = operator;\n        this.right = right;\n    }\n}\n"]}