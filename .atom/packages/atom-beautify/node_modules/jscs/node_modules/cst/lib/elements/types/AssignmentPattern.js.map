{"version":3,"sources":["../../../src/elements/types/AssignmentPattern.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqB;;;AACjB,aADiB,iBACjB,CAAY,UAAZ,EAAwB;4CADP,mBACO;;iGADP,8BAEP,qBAAqB,aADP;;AAEpB,cAAK,SAAL,GAAiB,IAAjB,CAFoB;;KAAxB;;+BADiB;;wCAMD,UAAU;;AAEtB,gBAAI,OAAO,SAAS,WAAT,EAAP,CAFkB;AAGtB,qBAAS,WAAT,GAHsB;AAItB,qBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC,EAJsB;AAKtB,qBAAS,WAAT,GALsB;AAMtB,gBAAI,QAAQ,SAAS,cAAT,EAAR,CANkB;AAOtB,qBAAS,SAAT,GAPsB;;AAStB,iBAAK,IAAL,GAAY,IAAZ,CATsB;AAUtB,iBAAK,KAAL,GAAa,KAAb,CAVsB;;;WANT","file":"AssignmentPattern.js","sourcesContent":["import Node from '../Node';\n\nexport default class AssignmentPattern extends Node {\n    constructor(childNodes) {\n        super('AssignmentPattern', childNodes);\n        this.isPattern = true;\n    }\n\n    _acceptChildren(children) {\n\n        let left = children.passPattern();\n        children.skipNonCode();\n        children.passToken('Punctuator', '=');\n        children.skipNonCode();\n        let right = children.passExpression();\n        children.assertEnd();\n\n        this.left = left;\n        this.right = right;\n    }\n}\n"]}