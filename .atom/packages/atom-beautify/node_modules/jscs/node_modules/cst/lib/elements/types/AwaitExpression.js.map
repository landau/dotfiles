{"version":3,"sources":["../../../src/elements/types/AwaitExpression.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqB;;;;;;AAIjB,aAJiB,eAIjB,CAAY,UAAZ,EAAwB;4CAJP,iBAIO;4FAJP,4BAKP,mBAAmB,aADL;KAAxB;;+BAJiB;;wCAQD,UAAU;AACtB,qBAAS,SAAT,CAAmB,YAAnB,EAAiC,OAAjC,EADsB;;AAGtB,gBAAI,WAAW,IAAX,CAHkB;;AAKtB,gBAAI,CAAC,SAAS,KAAT,EAAgB;AACjB,yBAAS,WAAT,GADiB;AAEjB,2BAAW,SAAS,cAAT,EAAX,CAFiB;aAArB;;AAKA,qBAAS,SAAT,GAVsB;;AAYtB,iBAAK,QAAL,GAAgB,QAAhB,CAZsB;;;WART","file":"AwaitExpression.js","sourcesContent":["import Expression from '../Expression';\n\nexport default class AwaitExpression extends Expression {\n\n    // TODO: Requires an async function.\n\n    constructor(childNodes) {\n        super('AwaitExpression', childNodes);\n    }\n\n    _acceptChildren(children) {\n        children.passToken('Identifier', 'await');\n\n        let argument = null;\n\n        if (!children.isEnd) {\n            children.skipNonCode();\n            argument = children.passExpression();\n        }\n\n        children.assertEnd();\n\n        this.argument = argument;\n    }\n}\n"]}