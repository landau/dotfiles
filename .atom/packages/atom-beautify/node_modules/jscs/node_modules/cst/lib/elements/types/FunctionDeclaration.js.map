{"version":3,"sources":["../../../src/elements/types/FunctionDeclaration.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEqB;;;AACjB,aADiB,mBACjB,CAAY,UAAZ,EAAwB;4CADP,qBACO;;iGADP,gCAEP,uBAAuB,aADT;;AAEpB,cAAK,UAAL,GAAkB,KAAlB,CAFoB;AAGpB,cAAK,UAAL,GAAkB,IAAlB,CAHoB;;KAAxB;;+BADiB;;wCAOD,UAAU;AACtB,gBAAI,eAAJ,CADsB;AAEtB,gBAAI,QAAQ,KAAR,CAFkB;AAGtB,gBAAI,KAAK,IAAL,CAHkB;;AAKtB,gBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,OAA/B,CAAJ,EAA6C;AACzC,wBAAQ,IAAR,CADyC;AAEzC,yBAAS,SAAT,CAAmB,YAAnB,EAAiC,OAAjC,EAFyC;AAGzC,yBAAS,WAAT,GAHyC;aAA7C;;AAMA,qBAAS,SAAT,CAAmB,SAAnB,EAA8B,UAA9B,EAXsB;AAYtB,qBAAS,WAAT,GAZsB;;AActB,gBAAI,YAAY,KAAZ,CAdkB;AAetB,gBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrC,4BAAY,IAAZ,CADqC;AAErC,yBAAS,QAAT,GAFqC;AAGrC,yBAAS,WAAT,GAHqC;aAAzC;;AAMA,gBAAI,SAAS,MAAT,CAAgB,YAAhB,CAAJ,EAAmC;AAC/B,qBAAK,SAAS,QAAT,CAAkB,YAAlB,CAAL,CAD+B;AAE/B,yBAAS,WAAT,GAF+B;aAAnC;;AAKA,qBAAS,iCAAkB,QAAlB,CAAT,CA1BsB;AA2BtB,qBAAS,WAAT,GA3BsB;;AA6BtB,gBAAI,OAAO,SAAS,aAAT,EAAP,CA7BkB;;AA+BtB,qBAAS,SAAT,GA/BsB;;AAiCtB,iBAAK,KAAL,GAAa,KAAb,CAjCsB;AAkCtB,iBAAK,EAAL,GAAU,EAAV,CAlCsB;AAmCtB,iBAAK,MAAL,GAAc,MAAd,CAnCsB;AAoCtB,iBAAK,IAAL,GAAY,IAAZ,CApCsB;AAqCtB,iBAAK,SAAL,GAAiB,SAAjB,CArCsB;;;WAPT","file":"FunctionDeclaration.js","sourcesContent":["import Statement from '../Statement';\nimport getFunctionParams from './utils/getFunctionParams';\n\nexport default class FunctionDeclaration extends Statement {\n    constructor(childNodes) {\n        super('FunctionDeclaration', childNodes);\n        this.expression = false;\n        this.isFunction = true;\n    }\n\n    _acceptChildren(children) {\n        let params;\n        let async = false;\n        let id = null;\n\n        if (children.isToken('Identifier', 'async')) {\n            async = true;\n            children.passToken('Identifier', 'async');\n            children.skipNonCode();\n        }\n\n        children.passToken('Keyword', 'function');\n        children.skipNonCode();\n\n        let generator = false;\n        if (children.isToken('Punctuator', '*')) {\n            generator = true;\n            children.moveNext();\n            children.skipNonCode();\n        }\n\n        if (children.isNode('Identifier')) {\n            id = children.passNode('Identifier');\n            children.skipNonCode();\n        }\n\n        params = getFunctionParams(children);\n        children.skipNonCode();\n\n        let body = children.passStatement();\n\n        children.assertEnd();\n\n        this.async = async;\n        this.id = id;\n        this.params = params;\n        this.body = body;\n        this.generator = generator;\n    }\n}\n"]}