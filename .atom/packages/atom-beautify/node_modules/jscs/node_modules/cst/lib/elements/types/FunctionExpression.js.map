{"version":3,"sources":["../../../src/elements/types/FunctionExpression.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEqB;;;;;;AAIjB,aAJiB,kBAIjB,CAAY,UAAZ,EAAwB;4CAJP,oBAIO;;iGAJP,+BAKP,sBAAsB,aADR;;AAEpB,cAAK,MAAL,GAAc,KAAd,CAFoB;AAGpB,cAAK,sBAAL,GAA8B,KAA9B,CAHoB;AAIpB,cAAK,UAAL,GAAkB,KAAlB,CAJoB;AAKpB,cAAK,UAAL,GAAkB,IAAlB,CALoB;;KAAxB;;+BAJiB;;wCAYD,UAAU;AACtB,gBAAI,SAAS,EAAT,CADkB;AAEtB,gBAAI,KAAK,IAAL,CAFkB;AAGtB,gBAAI,YAAY,KAAZ,CAHkB;AAItB,gBAAI,QAAQ,KAAR,CAJkB;AAKtB,gBAAI,QAAQ,KAAR,CALkB;;AAOtB,gBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrC,yBAAS,iCAAkB,QAAlB,CAAT,CADqC;AAErC,yBAAS,WAAT,GAFqC;aAAzC,MAGO;AACH,oBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,OAA/B,CAAJ,EAA6C;AACzC,4BAAQ,IAAR,CADyC;AAEzC,6BAAS,SAAT,CAAmB,YAAnB,EAAiC,OAAjC,EAFyC;AAGzC,6BAAS,WAAT,GAHyC;iBAA7C;;AAMA,yBAAS,SAAT,CAAmB,SAAnB,EAA8B,UAA9B,EAPG;AAQH,yBAAS,WAAT,GARG;;AAUH,oBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrC,gCAAY,IAAZ,CADqC;AAErC,6BAAS,QAAT,GAFqC;AAGrC,6BAAS,WAAT,GAHqC;iBAAzC;;AAMA,oBAAI,SAAS,MAAT,CAAgB,YAAhB,CAAJ,EAAmC;AAC/B,yBAAK,SAAS,QAAT,EAAL,CAD+B;AAE/B,6BAAS,WAAT,GAF+B;iBAAnC;;AAKA,yBAAS,iCAAkB,QAAlB,CAAT,CArBG;AAsBH,yBAAS,WAAT,GAtBG;aAHP;;AA4BA,gBAAI,OAAO,SAAS,aAAT,EAAP,CAnCkB;;AAqCtB,qBAAS,SAAT,GArCsB;;AAuCtB,iBAAK,KAAL,GAAa,KAAb,CAvCsB;AAwCtB,iBAAK,EAAL,GAAU,EAAV,CAxCsB;AAyCtB,iBAAK,MAAL,GAAc,MAAd,CAzCsB;AA0CtB,iBAAK,IAAL,GAAY,IAAZ,CA1CsB;AA2CtB,iBAAK,SAAL,GAAiB,SAAjB,CA3CsB;AA4CtB,iBAAK,MAAL,GAAc,KAAd,CA5CsB;;;;4CA+CN,eAAe;AAC/B,gBAAI,kBAAkB,cAAc,IAAd,KAAuB,UAAvB,IAAqC,cAAc,IAAd,KAAuB,aAAvB,CAAvD,EAA8F;AAC9F,qBAAK,MAAL,GAAc,IAAd,CAD8F;AAE9F,qBAAK,sBAAL,GAA8B,cAAc,UAAd,CAFgE;aAAlG,MAGO;AACH,qBAAK,MAAL,GAAc,KAAd,CADG;AAEH,qBAAK,sBAAL,GAA8B,KAA9B,CAFG;aAHP;AAOA,iBAAK,SAAL,GAAiB,KAAK,MAAL,GAAc,KAAK,sBAAL,GAA8B,KAAK,SAAL,CAR9B;;;WA3DlB","file":"FunctionExpression.js","sourcesContent":["import Expression from '../Expression';\nimport getFunctionParams from './utils/getFunctionParams';\n\nexport default class FunctionExpression extends Expression {\n\n    // TODO: get params from Property in case of setter\n\n    constructor(childNodes) {\n        super('FunctionExpression', childNodes);\n        this._short = false;\n        this._generatorFromProperty = false;\n        this.expression = false;\n        this.isFunction = true;\n    }\n\n    _acceptChildren(children) {\n        let params = [];\n        let id = null;\n        let generator = false;\n        let async = false;\n        let short = false;\n\n        if (children.isToken('Punctuator', '(')) {\n            params = getFunctionParams(children);\n            children.skipNonCode();\n        } else {\n            if (children.isToken('Identifier', 'async')) {\n                async = true;\n                children.passToken('Identifier', 'async');\n                children.skipNonCode();\n            }\n\n            children.passToken('Keyword', 'function');\n            children.skipNonCode();\n\n            if (children.isToken('Punctuator', '*')) {\n                generator = true;\n                children.moveNext();\n                children.skipNonCode();\n            }\n\n            if (children.isNode('Identifier')) {\n                id = children.passNode();\n                children.skipNonCode();\n            }\n\n            params = getFunctionParams(children);\n            children.skipNonCode();\n        }\n\n        let body = children.passStatement();\n\n        children.assertEnd();\n\n        this.async = async;\n        this.id = id;\n        this.params = params;\n        this.body = body;\n        this.generator = generator;\n        this._short = short;\n    }\n\n    _onSetParentElement(parentElement) {\n        if (parentElement && (parentElement.type === 'Property' || parentElement.type === 'ClassMethod')) {\n            this._short = true;\n            this._generatorFromProperty = parentElement._generator;\n        } else {\n            this._short = false;\n            this._generatorFromProperty = false;\n        }\n        this.generator = this._short ? this._generatorFromProperty : this.generator;\n    }\n}\n"]}