{"version":3,"sources":["../../../src/elements/types/JSXAttribute.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqB;;;AACjB,aADiB,YACjB,CAAY,UAAZ,EAAwB;4CADP,cACO;4FADP,yBAEP,gBAAgB,aADF;KAAxB;;+BADiB;;wCAKD,UAAU;AACtB,gBAAI,QAAQ,IAAR,CADkB;AAEtB,gBAAI,OAAO,SAAS,aAAT,CAAuB,CAAC,eAAD,EAAkB,mBAAlB,CAAvB,CAAP,CAFkB;;AAItB,gBAAI,CAAC,SAAS,KAAT,EAAgB;AACjB,yBAAS,WAAT,GADiB;AAEjB,yBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC,EAFiB;AAGjB,yBAAS,WAAT,GAHiB;AAIjB,wBAAQ,SAAS,aAAT,CAAuB,CAAC,eAAD,EAAkB,wBAAlB,EAA4C,YAA5C,CAAvB,CAAR,CAJiB;aAArB;AAMA,qBAAS,SAAT,GAVsB;;AAYtB,iBAAK,IAAL,GAAY,IAAZ,CAZsB;AAatB,iBAAK,KAAL,GAAa,KAAb,CAbsB;;;WALT","file":"JSXAttribute.js","sourcesContent":["import Node from '../Node';\n\nexport default class JSXAttribute extends Node {\n    constructor(childNodes) {\n        super('JSXAttribute', childNodes);\n    }\n\n    _acceptChildren(children) {\n        let value = null;\n        let name = children.passOneOfNode(['JSXIdentifier', 'JSXNamespacedName']);\n\n        if (!children.isEnd) {\n            children.skipNonCode();\n            children.passToken('Punctuator', '=');\n            children.skipNonCode();\n            value = children.passOneOfNode(['StringLiteral', 'JSXExpressionContainer', 'JSXElement']);\n        }\n        children.assertEnd();\n\n        this.name = name;\n        this.value = value;\n    }\n}\n"]}