{"version":3,"sources":["../../../src/elements/types/JSXExpressionContainer.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEqB;;;AACjB,aADiB,sBACjB,CAAY,UAAZ,EAAwB;4CADP,wBACO;4FADP,mCAEP,0BAA0B,aADZ;KAAxB;;+BADiB;;wCAKD,UAAU;AACtB,qBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC,EADsB;AAEtB,qBAAS,WAAT,GAFsB;;AAItB,gBAAI,mBAAJ;;;AAJsB,gBAOlB,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrC,6BAAa,kCAAb,CADqC;aAAzC,MAEO;;AAEH,6BAAa,SAAS,cAAT,EAAb,CAFG;AAGH,yBAAS,WAAT,GAHG;aAFP;;AAQA,qBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC,EAfsB;AAgBtB,qBAAS,SAAT,GAhBsB;;AAkBtB,iBAAK,UAAL,GAAkB,UAAlB,CAlBsB;;;WALT","file":"JSXExpressionContainer.js","sourcesContent":["import Expression from '../Expression';\nimport JSXEmptyExpression from './JSXEmptyExpression';\n\nexport default class JSXExpressionContainer extends Expression {\n    constructor(childNodes) {\n        super('JSXExpressionContainer', childNodes);\n    }\n\n    _acceptChildren(children) {\n        children.passToken('Punctuator', '{');\n        children.skipNonCode();\n\n        let expression;\n\n        // JSXEmptyExpression\n        if (children.isToken('Punctuator', '}')) {\n            expression = new JSXEmptyExpression();\n        } else {\n            // Expression\n            expression = children.passExpression();\n            children.skipNonCode();\n        }\n\n        children.passToken('Punctuator', '}');\n        children.assertEnd();\n\n        this.expression = expression;\n    }\n}\n"]}