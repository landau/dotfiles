{"version":3,"sources":["../../../src/elements/types/JSXOpeningElement.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;IAGqB;;;AACjB,aADiB,iBACjB,CAAY,UAAZ,EAAwB;4CADP,mBACO;4FADP,8BAEP,qBAAqB,aADP;KAAxB;;+BADiB;;wCAKD,UAAU;AACtB,gBAAI,aAAa,EAAb,CADkB;AAEtB,gBAAI,cAAc,KAAd,CAFkB;;AAItB,qBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC,EAJsB;AAKtB,qBAAS,WAAT,GALsB;AAMtB,gBAAI,OAAO,SAAS,aAAT,CAAuB,CAAC,eAAD,EAAkB,qBAAlB,EAAyC,mBAAzC,CAAvB,CAAP,CANkB;AAOtB,qBAAS,WAAT,GAPsB;;AAStB,mBAAO,IAAP,EAAa;AACT,oBAAI,SAAS,MAAT,CAAgB,cAAhB,CAAJ,EAAqC;AACjC,6BAAS,WAAT,GADiC;AAEjC,+BAAW,IAAX,CAAgB,SAAS,QAAT,CAAkB,cAAlB,CAAhB,EAFiC;AAGjC,6BAAS,WAAT,GAHiC;iBAArC,MAIO,IAAI,SAAS,MAAT,CAAgB,oBAAhB,CAAJ,EAA2C;AAC9C,6BAAS,WAAT,GAD8C;AAE9C,+BAAW,IAAX,CAAgB,SAAS,QAAT,CAAkB,oBAAlB,CAAhB,EAF8C;AAG9C,6BAAS,WAAT,GAH8C;iBAA3C,MAIA;AACH,0BADG;iBAJA;aALX;;AAcA,gBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrC,yBAAS,WAAT,GADqC;AAErC,yBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC,EAFqC;AAGrC,8BAAc,IAAd,CAHqC;AAIrC,yBAAS,WAAT,GAJqC;aAAzC;;AAOA,qBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC,EA9BsB;AA+BtB,qBAAS,SAAT,GA/BsB;;AAiCtB,iBAAK,IAAL,GAAY,IAAZ,CAjCsB;AAkCtB,iBAAK,UAAL,GAAkB,UAAlB,CAlCsB;AAmCtB,iBAAK,WAAL,GAAmB,WAAnB,CAnCsB;;;WALT","file":"JSXOpeningElement.js","sourcesContent":["import Node from '../Node';\n\n// TODO: create JSXBoundaryElement?\nexport default class JSXOpeningElement extends Node {\n    constructor(childNodes) {\n        super('JSXOpeningElement', childNodes);\n    }\n\n    _acceptChildren(children) {\n        let attributes = [];\n        let selfClosing = false;\n\n        children.passToken('Punctuator', '<');\n        children.skipNonCode();\n        let name = children.passOneOfNode(['JSXIdentifier', 'JSXMemberExpression', 'JSXNamespacedName']);\n        children.skipNonCode();\n\n        while (true) {\n            if (children.isNode('JSXAttribute')) {\n                children.skipNonCode();\n                attributes.push(children.passNode('JSXAttribute'));\n                children.skipNonCode();\n            } else if (children.isNode('JSXSpreadAttribute')) {\n                children.skipNonCode();\n                attributes.push(children.passNode('JSXSpreadAttribute'));\n                children.skipNonCode();\n            } else {\n                break;\n            }\n        }\n\n        if (children.isToken('Punctuator', '/')) {\n            children.skipNonCode();\n            children.passToken('Punctuator', '/');\n            selfClosing = true;\n            children.skipNonCode();\n        }\n\n        children.passToken('Punctuator', '>');\n        children.assertEnd();\n\n        this.name = name;\n        this.attributes = attributes;\n        this.selfClosing = selfClosing;\n    }\n}\n"]}