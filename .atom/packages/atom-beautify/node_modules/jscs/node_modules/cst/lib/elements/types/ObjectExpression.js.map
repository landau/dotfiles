{"version":3,"sources":["../../../src/elements/types/ObjectExpression.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqB;;;AACjB,aADiB,gBACjB,CAAY,UAAZ,EAAwB;4CADP,kBACO;4FADP,6BAEP,oBAAoB,aADN;KAAxB;;+BADiB;;wCAKD,UAAU;AACtB,gBAAI,aAAa,EAAb,CADkB;;AAGtB,qBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC,EAHsB;AAItB,qBAAS,WAAT,GAJsB;;AAMtB,mBAAO,CAAC,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAD,EAAsC;AACzC,oBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrC,6BAAS,QAAT,GADqC;AAErC,6BAAS,WAAT,GAFqC;AAGrC,6BAAS,WAAT,CAAqB,YAArB,EAAmC,GAAnC,EAHqC;iBAAzC,MAIO;AACH,wBAAI,SAAS,MAAT,CAAgB,gBAAhB,CAAJ,EAAuC;AACnC,mCAAW,IAAX,CAAgB,SAAS,QAAT,CAAkB,gBAAlB,CAAhB,EADmC;qBAAvC,MAEO,IAAI,SAAS,MAAT,CAAgB,gBAAhB,CAAJ,EAAuC;AAC1C,mCAAW,IAAX,CAAgB,SAAS,QAAT,CAAkB,gBAAlB,CAAhB,EAD0C;qBAAvC,MAEA;AACH,mCAAW,IAAX,CAAgB,SAAS,QAAT,CAAkB,cAAlB,CAAhB,EADG;qBAFA;AAKP,6BAAS,WAAT,GARG;AASH,wBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrC,iCAAS,QAAT,GADqC;AAErC,iCAAS,WAAT,GAFqC;qBAAzC;iBAbJ;aADJ;;AAqBA,qBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC,EA3BsB;AA4BtB,qBAAS,SAAT,GA5BsB;;AA8BtB,iBAAK,UAAL,GAAkB,UAAlB,CA9BsB;;;WALT","file":"ObjectExpression.js","sourcesContent":["import Expression from '../Expression';\n\nexport default class ObjectExpression extends Expression {\n    constructor(childNodes) {\n        super('ObjectExpression', childNodes);\n    }\n\n    _acceptChildren(children) {\n        let properties = [];\n\n        children.passToken('Punctuator', '{');\n        children.skipNonCode();\n\n        while (!children.isToken('Punctuator', '}')) {\n            if (children.isToken('Punctuator', ',')) {\n                children.moveNext();\n                children.skipNonCode();\n                children.assertToken('Punctuator', '}');\n            } else {\n                if (children.isNode('SpreadProperty')) {\n                    properties.push(children.passNode('SpreadProperty'));\n                } else if (children.isNode('ObjectProperty')) {\n                    properties.push(children.passNode('ObjectProperty'));\n                } else {\n                    properties.push(children.passNode('ObjectMethod'));\n                }\n                children.skipNonCode();\n                if (children.isToken('Punctuator', ',')) {\n                    children.moveNext();\n                    children.skipNonCode();\n                }\n            }\n        }\n\n        children.passToken('Punctuator', '}');\n        children.assertEnd();\n\n        this.properties = properties;\n    }\n}\n"]}