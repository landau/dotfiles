{"version":3,"sources":["../../../src/elements/types/ObjectMethod.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAM,kBAAkB;AACpB,SAAK,IAAL;AACA,SAAK,IAAL;CAFE;;IAKe;;;AACjB,aADiB,YACjB,CAAY,UAAZ,EAAwB;4CADP,cACO;;iGADP,yBAEP,gBAAgB,aADF;;AAEpB,cAAK,UAAL,GAAkB,IAAlB,CAFoB;;KAAxB;;+BADiB;;wCAMD,UAAU;AACtB,gBAAI,YAAJ,CADsB;AAEtB,gBAAI,cAAJ,CAFsB;AAGtB,gBAAI,YAAY,KAAZ,CAHkB;AAItB,gBAAI,SAAS,KAAT,CAJkB;AAKtB,gBAAI,WAAW,KAAX,CALkB;AAMtB,gBAAI,aAAJ,CANsB;AAOtB,gBAAI,SAAS,EAAT,CAPkB;AAQtB,gBAAI,aAAJ,CARsB;;AAUtB,gBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrC,yBAAS,SAAT,GADqC;AAErC,yBAAS,WAAT,GAFqC;AAGrC,4BAAY,IAAZ,CAHqC;aAAzC;;AAMA,gBAAI,SAAS,OAAT,CAAiB,YAAjB,EAA+B,eAA/B,CAAJ,EAAqD;AACjD,uBAAO,SAAS,cAAT,CAAwB,KAAxB,CAD0C;;AAGjD,yBAAS,SAAT,CAAmB,YAAnB,EAHiD;AAIjD,yBAAS,WAAT,GAJiD;;AAMjD,2BAAW,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAX,CANiD;AAOjD,sBAAM,QAAQ,QAAR,CAAN,CAPiD;;AASjD,yBAAS,WAAT,GATiD;;AAWjD,yBAAS,iCAAkB,QAAlB,CAAT,CAXiD;AAYjD,yBAAS,WAAT,GAZiD;;AAcjD,uBAAO,SAAS,QAAT,CAAkB,gBAAlB,CAAP,CAdiD;aAArD,MAeO;AACH,uBAAO,QAAP,CADG;AAEH,2BAAW,SAAS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAX,CAFG;AAGH,sBAAM,QAAQ,QAAR,CAAN,CAHG;;AAKH,yBAAS,WAAT,GALG;;AAOH,oBAAI,SAAS,OAAT,CAAiB,YAAjB,CAAJ,EAAoC;AAChC,6BAAS,IAAT,CADgC;;AAGhC,6BAAS,iCAAkB,QAAlB,CAAT,CAHgC;AAIhC,6BAAS,WAAT,GAJgC;;AAMhC,2BAAO,SAAS,QAAT,CAAkB,gBAAlB,CAAP,CANgC;iBAApC,MAQO;AACH,6BAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC,EADG;AAEH,6BAAS,WAAT,GAFG;AAGH,wBAAI,SAAS,cAAT,CAAwB,SAAxB,EAAmC;AACnC,gCAAQ,SAAS,WAAT,EAAR,CADmC;qBAAvC,MAEO;AACH,gCAAQ,SAAS,cAAT,EAAR,CADG;qBAFP;iBAXJ;aAtBJ;;AAyCA,qBAAS,SAAT,GAzDsB;;AA2DtB,iBAAK,UAAL,GAAkB,SAAlB,CA3DsB;AA4DtB,iBAAK,IAAL,GAAY,IAAZ,CA5DsB;AA6DtB,iBAAK,GAAL,GAAW,GAAX,CA7DsB;AA8DtB,iBAAK,KAAL,GAAa,KAAb,CA9DsB;AA+DtB,iBAAK,QAAL,GAAgB,QAAhB,CA/DsB;AAgEtB,iBAAK,MAAL,GAAc,MAAd,CAhEsB;AAiEtB,iBAAK,MAAL,GAAc,MAAd,CAjEsB;AAkEtB,iBAAK,IAAL,GAAY,IAAZ,CAlEsB;;;WANT;;;;;;AA4ErB,SAAS,OAAT,CAAiB,QAAjB,EAA2B;AACvB,QAAI,SAAS,MAAT,CAAgB,eAAhB,KAAoC,SAAS,MAAT,CAAgB,YAAhB,CAApC,EAAmE;AACnE,eAAO,SAAS,QAAT,EAAP,CADmE;KAAvE,MAEO;AACH,iBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC,EADG;AAEH,iBAAS,WAAT,GAFG;AAGH,YAAI,SAAS,SAAS,cAAT,EAAT,CAHD;AAIH,iBAAS,WAAT,GAJG;AAKH,iBAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC,EALG;AAMH,eAAO,MAAP,CANG;KAFP;CADJ","file":"ObjectMethod.js","sourcesContent":["import Node from '../Node';\nimport getFunctionParams from './utils/getFunctionParams';\n\nconst getterAndSetter = {\n    get: true,\n    set: true\n};\n\nexport default class ObjectMethod extends Node {\n    constructor(childNodes) {\n        super('ObjectMethod', childNodes);\n        this.isFunction = true;\n    }\n\n    _acceptChildren(children) {\n        let key;\n        let value;\n        let generator = false;\n        let method = false;\n        let computed = false;\n        let kind;\n        let params = [];\n        let body;\n\n        if (children.isToken('Punctuator', '*')) {\n            children.passToken();\n            children.skipNonCode();\n            generator = true;\n        }\n\n        if (children.isToken('Identifier', getterAndSetter)) {\n            kind = children.currentElement.value;\n\n            children.passToken('Identifier');\n            children.skipNonCode();\n\n            computed = children.isToken('Punctuator', '[');\n            key = readKey(children);\n\n            children.skipNonCode();\n\n            params = getFunctionParams(children);\n            children.skipNonCode();\n\n            body = children.passNode('BlockStatement');\n        } else {\n            kind = 'method';\n            computed = children.isToken('Punctuator', '[');\n            key = readKey(children);\n\n            children.skipNonCode();\n\n            if (children.isToken('Punctuator')) {\n                method = true;\n\n                params = getFunctionParams(children);\n                children.skipNonCode();\n\n                body = children.passNode('BlockStatement');\n\n            } else {\n                children.passToken('Punctuator', ':');\n                children.skipNonCode();\n                if (children.currentElement.isPattern) {\n                    value = children.passPattern();\n                } else {\n                    value = children.passExpression();\n                }\n            }\n        }\n\n        children.assertEnd();\n\n        this._generator = generator;\n        this.kind = kind;\n        this.key = key;\n        this.value = value;\n        this.computed = computed;\n        this.method = method;\n        this.params = params;\n        this.body = body;\n    }\n}\n\nfunction readKey(children) {\n    if (children.isNode('StringLiteral') || children.isNode('Identifier')) {\n        return children.passNode();\n    } else {\n        children.passToken('Punctuator', '[');\n        children.skipNonCode();\n        let result = children.passExpression();\n        children.skipNonCode();\n        children.passToken('Punctuator', ']');\n        return result;\n    }\n}\n"]}