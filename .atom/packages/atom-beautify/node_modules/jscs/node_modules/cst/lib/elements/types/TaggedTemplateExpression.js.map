{"version":3,"sources":["../../../src/elements/types/TaggedTemplateExpression.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqB;;;AACjB,aADiB,wBACjB,CAAY,UAAZ,EAAwB;4CADP,0BACO;4FADP,qCAEP,4BAA4B,aADd;KAAxB;;+BADiB;;wCAKD,UAAU;AACtB,gBAAI,MAAM,SAAS,cAAT,EAAN,CADkB;AAEtB,qBAAS,WAAT,GAFsB;AAGtB,gBAAI,QAAQ,SAAS,QAAT,CAAkB,iBAAlB,CAAR,CAHkB;;AAKtB,iBAAK,GAAL,GAAW,GAAX,CALsB;AAMtB,iBAAK,KAAL,GAAa,KAAb,CANsB;;;WALT","file":"TaggedTemplateExpression.js","sourcesContent":["import Expression from '../Expression';\n\nexport default class TaggedTemplateExpression extends Expression {\n    constructor(childNodes) {\n        super('TaggedTemplateExpression', childNodes);\n    }\n\n    _acceptChildren(children) {\n        let tag = children.passExpression();\n        children.skipNonCode();\n        let quasi = children.passNode('TemplateLiteral');\n\n        this.tag = tag;\n        this.quasi = quasi;\n    }\n}\n"]}