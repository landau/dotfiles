{"version":3,"sources":["../../../src/elements/types/TemplateElement.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqB;;;AACjB,aADiB,eACjB,CAAY,UAAZ,EAAwB;4CADP,iBACO;4FADP,4BAEP,mBAAmB,aADL;KAAxB;;+BADiB;;wCAKD,UAAU;AACtB,gBAAI,gBAAgB,SAAS,SAAT,CAAmB,UAAnB,CAAhB,CADkB;;AAGtB,gBAAI,OAAO,KAAP,CAHkB;AAItB,gBAAI,QAAQ;AACR,wBAAQ,cAAc,KAAd;AACR,qBAAK,cAAc,aAAd,EAAL;aAFA,CAJkB;;AAStB,qBAAS,SAAT,GATsB;;AAWtB,iBAAK,IAAL,GAAY,IAAZ,CAXsB;AAYtB,iBAAK,KAAL,GAAa,KAAb,CAZsB;;;WALT","file":"TemplateElement.js","sourcesContent":["import Node from '../Node';\n\nexport default class TemplateElement extends Node {\n    constructor(childNodes) {\n        super('TemplateElement', childNodes);\n    }\n\n    _acceptChildren(children) {\n        let templateToken = children.passToken('Template');\n\n        let tail = false;\n        let value = {\n            cooked: templateToken.value,\n            raw: templateToken.getSourceCode()\n        };\n\n        children.assertEnd();\n\n        this.tail = tail;\n        this.value = value;\n    }\n}\n"]}