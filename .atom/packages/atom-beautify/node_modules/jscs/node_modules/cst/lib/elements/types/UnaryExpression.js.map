{"version":3,"sources":["../../../src/elements/types/UnaryExpression.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA,IAAM,iBAAiB;AACnB,SAAK,IAAL;AACA,SAAK,IAAL;AACA,SAAK,IAAL;AACA,SAAK,IAAL;AACA,cAAU,IAAV;AACA,YAAQ,IAAR;AACA,cAAU,IAAV;CAPE;;IAUe;;;;;;AAIjB,aAJiB,eAIjB,CAAY,UAAZ,EAAwB;4CAJP,iBAIO;;iGAJP,4BAKP,mBAAmB,aADL;;AAEpB,cAAK,MAAL,GAAc,IAAd,CAFoB;;KAAxB;;+BAJiB;;wCASD,UAAU;AACtB,gBAAI,SAAS,cAAT,CAAwB,IAAxB,KAAiC,YAAjC,IAAiD,SAAS,cAAT,CAAwB,IAAxB,KAAiC,SAAjC,EAA4C;AAC7F,yBAAS,WAAT,CAAqB,SAAS,cAAT,CAAwB,IAAxB,EAA8B,cAAnD,EAD6F;aAAjG,MAEO;AACH,yBAAS,WAAT,CAAqB,YAArB,EADG;aAFP;;AAMA,gBAAI,WAAW,SAAS,SAAT,GAAqB,KAArB,CAPO;AAQtB,qBAAS,WAAT,GARsB;;AAUtB,gBAAI,WAAW,SAAS,cAAT,EAAX,CAVkB;;AAYtB,qBAAS,SAAT,GAZsB;;AActB,iBAAK,QAAL,GAAgB,QAAhB,CAdsB;AAetB,iBAAK,QAAL,GAAgB,QAAhB,CAfsB;;;WATT","file":"UnaryExpression.js","sourcesContent":["import Expression from '../Expression';\n\nconst unaryOperators = {\n    '-': true,\n    '+': true,\n    '!': true,\n    '~': true,\n    'typeof': true,\n    'void': true,\n    'delete': true\n};\n\nexport default class UnaryExpression extends Expression {\n\n    // TODO: Should respect operator precedence: putting \"-a\" after \"b\" without parens should raise an error.\n\n    constructor(childNodes) {\n        super('UnaryExpression', childNodes);\n        this.prefix = true;\n    }\n\n    _acceptChildren(children) {\n        if (children.currentElement.type === 'Punctuator' || children.currentElement.type === 'Keyword') {\n            children.assertToken(children.currentElement.type, unaryOperators);\n        } else {\n            children.assertToken('Punctuator');\n        }\n\n        let operator = children.passToken().value;\n        children.skipNonCode();\n\n        let argument = children.passExpression();\n\n        children.assertEnd();\n\n        this.argument = argument;\n        this.operator = operator;\n    }\n}\n"]}