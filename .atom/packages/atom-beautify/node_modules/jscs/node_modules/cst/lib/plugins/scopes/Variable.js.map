{"version":3,"sources":["../../../src/plugins/scopes/Variable.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAKA;;;;;;IAEqB;AACjB,aADiB,QACjB,OAA6E;YAAhE,iBAAgE;YAA1D,iBAA0D;YAApD,mBAAoD;4CAD5D,UAC4D;;AACzE,aAAK,IAAL,GAAY,IAAZ,CADyE;AAEzE,aAAK,IAAL,GAAY,IAAZ,CAFyE;AAGzE,aAAK,KAAL,GAAa,KAAb,CAHyE;AAIzE,aAAK,YAAL,GAAoB,mBAApB,CAJyE;AAKzE,aAAK,WAAL,GAAmB,mBAAnB,CALyE;KAA7E;;+BADiB;;uCAeF,YAAwB;AACnC,uBAAW,QAAX,GAAsB,IAAtB,CADmC;AAEnC,iBAAK,YAAL,CAAkB,GAAlB,CAAsB,UAAtB,EAFmC;;;;sCAKzB,WAAsB;AAChC,sBAAU,QAAV,GAAqB,IAArB,CADgC;AAEhC,iBAAK,WAAL,CAAiB,GAAjB,CAAqB,SAArB,EAFgC;;;;0CAKlB,YAAwB;AACtC,iBAAK,YAAL,CAAkB,MAAlB,CAAyB,UAAzB,EADsC;;;;yCAIzB,WAAsB;AACnC,iBAAK,WAAL,CAAiB,MAAjB,CAAwB,SAAxB,EADmC;;;;4CAInB,UAAoB;;;;;;AACpC,gEAAsB,KAAK,WAAL,QAAtB,oGAAwC;wBAA/B,wBAA+B;;AACpC,wBAAI,CAAC,UAAU,IAAV,EAAgB;AACjB,6BAAK,WAAL,CAAiB,MAAjB,CAAwB,SAAxB,EADiB;AAEjB,iCAAS,WAAT,CAAqB,GAArB,CAAyB,SAAzB,EAFiB;AAGjB,kCAAU,QAAV,GAAqB,QAArB,CAHiB;qBAArB;iBADJ;;;;;;;;;;;;;;aADoC;;;;yCAUT;AAC3B,mBAAO,uBAAQ,KAAK,YAAL,CAAf,CAD2B;;;;wCAIF;AACzB,mBAAO,uBAAQ,KAAK,WAAL,CAAf,CADyB;;;WA/CZ","file":"Variable.js","sourcesContent":["/* @flow */\n\nimport type Definition from './Definition';\nimport type Reference from './Reference';\nimport type Scope from './Scope';\nimport toArray from '../../utils/toArray';\n\nexport default class Variable {\n    constructor({name, type, scope}: {name: string, type: string, scope: Scope}) {\n        this.name = name;\n        this.type = type;\n        this.scope = scope;\n        this._definitions = new Set();\n        this._references = new Set();\n    }\n\n    name: string;\n    type: string;\n    scope: Scope;\n    _references: Set<Reference>;\n    _definitions: Set<Definition>;\n\n    _addDefinition(definition: Definition) {\n        definition.variable = this;\n        this._definitions.add(definition);\n    }\n\n    _addReference(reference: Reference) {\n        reference.variable = this;\n        this._references.add(reference);\n    }\n\n    _removeDefinition(definition: Definition) {\n        this._definitions.delete(definition);\n    }\n\n    _removeReference(reference: Reference) {\n        this._references.delete(reference);\n    }\n\n    _transferReferences(variable: Variable) {\n        for (let reference of this._references) {\n            if (!reference.type) {\n                this._references.delete(reference);\n                variable._references.add(reference);\n                reference.variable = variable;\n            }\n        }\n    }\n\n    getDefinitions(): Definition[] {\n        return toArray(this._definitions);\n    }\n\n    getReferences(): Reference[] {\n        return toArray(this._references);\n    }\n}\n"]}