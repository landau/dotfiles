// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
*/
"use strict";

var Serialization = Serialization || {};

/**
 * @constructor
 */
Serialization.Point = function () {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Serialization.Point}
 */
Serialization.Point.prototype.__init = function (i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
Serialization.Point.prototype.row = function () {
  return this.bb.readInt32(this.bb_pos);
};

/**
 * @returns {number}
 */
Serialization.Point.prototype.column = function () {
  return this.bb.readInt32(this.bb_pos + 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} row
 * @param {number} column
 * @returns {flatbuffers.Offset}
 */
Serialization.Point.createPoint = function (builder, row, column) {
  builder.prep(4, 8);
  builder.writeInt32(column);
  builder.writeInt32(row);
  return builder.offset();
};

/**
 * @constructor
 */
Serialization.Change = function () {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Serialization.Change}
 */
Serialization.Change.prototype.__init = function (i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Serialization.Change=} obj
 * @returns {Serialization.Change}
 */
Serialization.Change.getRootAsChange = function (bb, obj) {
  return (obj || new Serialization.Change()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {Serialization.Point=} obj
 * @returns {Serialization.Point}
 */
Serialization.Change.prototype.oldStart = function (obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new Serialization.Point()).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {Serialization.Point=} obj
 * @returns {Serialization.Point}
 */
Serialization.Change.prototype.newStart = function (obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new Serialization.Point()).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {Serialization.Point=} obj
 * @returns {Serialization.Point}
 */
Serialization.Change.prototype.oldExtent = function (obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new Serialization.Point()).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {Serialization.Point=} obj
 * @returns {Serialization.Point}
 */
Serialization.Change.prototype.newExtent = function (obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new Serialization.Point()).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Serialization.Change.prototype.newText = function (optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Serialization.Change.prototype.oldText = function (optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Serialization.Change.startChange = function (builder) {
  builder.startObject(6);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} oldStartOffset
 */
Serialization.Change.addOldStart = function (builder, oldStartOffset) {
  builder.addFieldStruct(0, oldStartOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} newStartOffset
 */
Serialization.Change.addNewStart = function (builder, newStartOffset) {
  builder.addFieldStruct(1, newStartOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} oldExtentOffset
 */
Serialization.Change.addOldExtent = function (builder, oldExtentOffset) {
  builder.addFieldStruct(2, oldExtentOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} newExtentOffset
 */
Serialization.Change.addNewExtent = function (builder, newExtentOffset) {
  builder.addFieldStruct(3, newExtentOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} newTextOffset
 */
Serialization.Change.addNewText = function (builder, newTextOffset) {
  builder.addFieldOffset(4, newTextOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} oldTextOffset
 */
Serialization.Change.addOldText = function (builder, oldTextOffset) {
  builder.addFieldOffset(5, oldTextOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Serialization.Change.endChange = function (builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Serialization.Patch = function () {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Serialization.Patch}
 */
Serialization.Patch.prototype.__init = function (i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Serialization.Patch=} obj
 * @returns {Serialization.Patch}
 */
Serialization.Patch.getRootAsPatch = function (bb, obj) {
  return (obj || new Serialization.Patch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {Serialization.Change=} obj
 * @returns {Serialization.Change}
 */
Serialization.Patch.prototype.changes = function (index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new Serialization.Change()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Serialization.Patch.prototype.changesLength = function () {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Serialization.Patch.startPatch = function (builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} changesOffset
 */
Serialization.Patch.addChanges = function (builder, changesOffset) {
  builder.addFieldOffset(0, changesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Serialization.Patch.createChangesVector = function (builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Serialization.Patch.startChangesVector = function (builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Serialization.Patch.endPatch = function (builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
Serialization.Patch.finishPatchBuffer = function (builder, offset) {
  builder.finish(offset);
};

// Exports for Node.js and RequireJS
module.exports = Serialization;