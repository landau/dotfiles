{"version":3,"sources":["../src/Hover.js"],"names":["NULL_HOVER","contents","HoverSupport","constructor","documents","flow","provideHover","params","position","textDocument","fileName","parse","uri","fsPath","doc","get","typeHint","buffer","language","value","hint","range"],"mappings":";;;;;;;;;;AAYA;;AAEA;;;;AAEA;;;;AACA;;;;AAjBA;;;;;;;;;;;;AAwBA,MAAMA,aAAa;AACjBC,YAAU;AADO,CAAnB;;AAIe,MAAMC,YAAN,CAAmB;;AAIhCC,cAAY,EAACC,SAAD,EAAYC,IAAZ,EAAZ,EAAmD;AACjD,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACD;;AAEKC,cAAN,CAAmBC,MAAnB,EAAwE;AAAA;;AAAA;AAAA,YAC/DC,QAD+D,GACrCD,MADqC,CAC/DC,QAD+D;AAAA,YACrDC,YADqD,GACrCF,MADqC,CACrDE,YADqD;;;AAGtE,YAAMC,WAAW,oBAAIC,KAAJ,CAAUF,aAAaG,GAAvB,EAA4BC,MAA7C;AACA,YAAMC,MAAM,MAAKV,SAAL,CAAeW,GAAf,CAAmBN,aAAaG,GAAhC,CAAZ;;AAEA,YAAMI,WAAW,MAAM,MAAKX,IAAL,CAAUW,QAAV,CACrBN,QADqB,EAErBI,IAAIG,MAFiB,EAGrB,kCAAuBT,QAAvB,CAHqB,CAAvB;;AAMA,UAAIQ,QAAJ,EAAc;AACZ,eAAO;AACLf,oBAAU,EAACiB,UAAU,YAAX,EAAyBC,OAAOH,SAASI,IAAzC,EADL;AAELC,iBAAO,+BAAoBL,SAASK,KAA7B;AAFF,SAAP;AAID;;AAED,aAAOrB,UAAP;AAnBsE;AAoBvE;AA7B+B;kBAAbE,Y","file":"Hover.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n * @format\n */\n\nimport {FlowSingleProjectLanguageService} from './pkg/nuclide-flow-rpc/lib/FlowSingleProjectLanguageService';\n\nimport URI from 'vscode-uri';\n\nimport TextDocuments from './TextDocuments';\nimport {atomRangeToLSPRange, lspPositionToAtomPoint} from './utils/util';\n\ntype HoverSupportParams = {\n  documents: TextDocuments,\n  flow: FlowSingleProjectLanguageService,\n};\n\nconst NULL_HOVER = {\n  contents: [],\n};\n\nexport default class HoverSupport {\n  documents: TextDocuments;\n  flow: FlowSingleProjectLanguageService;\n\n  constructor({documents, flow}: HoverSupportParams) {\n    this.documents = documents;\n    this.flow = flow;\n  }\n\n  async provideHover(params: TextDocumentPositionParams): Promise<?Hover> {\n    const {position, textDocument} = params;\n\n    const fileName = URI.parse(textDocument.uri).fsPath;\n    const doc = this.documents.get(textDocument.uri);\n\n    const typeHint = await this.flow.typeHint(\n      fileName,\n      doc.buffer,\n      lspPositionToAtomPoint(position),\n    );\n\n    if (typeHint) {\n      return {\n        contents: {language: 'javascript', value: typeHint.hint},\n        range: atomRangeToLSPRange(typeHint.range),\n      };\n    }\n\n    return NULL_HOVER;\n  }\n}\n"]}