{"version":3,"sources":["../src/TextDocuments.js"],"names":["logger","textDocumentFromLSPTextDocument","textDocument","uri","languageId","version","text","TextDocuments","constructor","_disposables","_documents","Map","_emitter","_handleDidStopChanging","document","emit","_handleDidSave","add","dispose","disposed","syncKind","Incremental","get","listen","connection","onDidOpenTextDocument","e","addDocument","onDidChangeTextDocument","contentChanges","updateMany","onDidCloseTextDocument","removeDocument","onDidSaveTextDocument","save","debug","set","onDidStopChanging","onDidSave","remove","delete","all","Array","from","values","onDidChangeContent","handler","on","onDidOpen"],"mappings":"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","file":"TextDocuments.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n * @format\n */\n\nimport type {\n  DidChangeTextDocumentParams,\n  DidCloseTextDocumentParams,\n  DidOpenTextDocumentParams,\n  DidSaveTextDocumentParams,\n  IConnection,\n  TextDocumentSyncKindType,\n} from 'vscode-languageserver';\n\nimport type {NuclideUri} from 'nuclide-commons/nuclideUri';\nimport type {ITextDocumentItem} from 'vscode-languageserver-types';\n\nimport invariant from 'assert';\nimport TextDocument from './TextDocument';\nimport UniversalDisposable from 'nuclide-commons/UniversalDisposable';\nimport {Emitter} from 'event-kit';\nimport {TextDocumentSyncKind} from 'vscode-languageserver';\nimport {getLogger} from 'log4js';\n\nconst logger = getLogger('TextDocuments');\n\nfunction textDocumentFromLSPTextDocument(textDocument: ITextDocumentItem) {\n  return new TextDocument(\n    textDocument.uri,\n    textDocument.languageId,\n    textDocument.version,\n    textDocument.text,\n  );\n}\n\nexport default class TextDocuments {\n  _disposables = new UniversalDisposable();\n  _documents: Map<string, TextDocument> = new Map();\n  _emitter: Emitter = new Emitter();\n\n  constructor() {\n    this._disposables.add(this._emitter);\n  }\n\n  dispose(): void {\n    this._disposables.dispose();\n  }\n\n  get disposed(): boolean {\n    return this._disposables.disposed;\n  }\n\n  get syncKind(): TextDocumentSyncKindType {\n    return TextDocumentSyncKind.Incremental;\n  }\n\n  get(uri: string): TextDocument {\n    const document = this._documents.get(uri);\n\n    invariant(\n      document != null,\n      `TextDocuments: asked for document with uri ${uri}, but no buffer was loaded`,\n    );\n    return document;\n  }\n\n  listen(connection: IConnection): void {\n    connection.onDidOpenTextDocument((e: DidOpenTextDocumentParams) => {\n      const {textDocument} = e;\n      const document = textDocumentFromLSPTextDocument(textDocument);\n      this.addDocument(textDocument.uri, document);\n    });\n\n    connection.onDidChangeTextDocument((e: DidChangeTextDocumentParams) => {\n      const {contentChanges, textDocument} = e;\n      const document = this.get(textDocument.uri);\n      document.updateMany(contentChanges, textDocument.version);\n    });\n\n    connection.onDidCloseTextDocument((e: DidCloseTextDocumentParams) => {\n      this.removeDocument(e.textDocument.uri);\n    });\n\n    connection.onDidSaveTextDocument((e: DidSaveTextDocumentParams) => {\n      const document = this.get(e.textDocument.uri);\n      document.save(e.textDocument.version, e.text);\n    });\n  }\n\n  addDocument(uri: NuclideUri, document: TextDocument) {\n    logger.debug(`TextDocuments: adding document ${uri}`);\n    this._documents.set(uri, document);\n    this._disposables.add(document);\n    this._emitter.emit('didOpen', {document});\n    document.onDidStopChanging(this._handleDidStopChanging);\n    document.onDidSave(this._handleDidSave);\n  }\n\n  removeDocument(uri: NuclideUri) {\n    logger.debug(`TextDocuments: removing document ${uri}`);\n    const document = this.get(uri);\n    this._disposables.remove(document);\n    this._documents.delete(uri);\n    document.dispose();\n  }\n\n  all(): Array<TextDocument> {\n    return Array.from(this._documents.values());\n  }\n\n  onDidChangeContent(handler: (e: TextDocumentChangeEvent) => mixed): void {\n    this._emitter.on('didChangeContent', handler);\n  }\n\n  onDidSave(handler: (e: TextDocumentChangeEvent) => mixed): void {\n    this._emitter.on('didSave', handler);\n  }\n\n  onDidOpen(handler: (e: TextDocumentChangeEvent) => mixed): void {\n    this._emitter.on('didOpen', handler);\n  }\n\n  _handleDidStopChanging = (document: TextDocument) => {\n    this._emitter.emit('didChangeContent', {document});\n  };\n\n  _handleDidSave = (document: TextDocument) => {\n    this._emitter.emit('didSave', {document});\n  };\n}\n"]}