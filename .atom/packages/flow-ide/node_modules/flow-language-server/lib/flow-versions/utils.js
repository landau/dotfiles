'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.versionInfoForPath = undefined;

var _asyncToGenerator = require('async-to-generator');

var _asyncToGenerator2 = _interopRequireDefault(_asyncToGenerator);

let versionInfoForPath = exports.versionInfoForPath = (() => {
  var _ref = (0, _asyncToGenerator2.default)(function* (rootPath, pathToFlow) {
    let output;
    try {
      output = JSON.parse((yield (0, _process.runCommand)(pathToFlow, ['version', '--json'], {
        cwd: rootPath
      }).toPromise()));
    } catch (e) {
      return null;
    }

    return {
      pathToFlow: output.binary,
      flowVersion: output.semver
    };
  });

  return function versionInfoForPath(_x, _x2) {
    return _ref.apply(this, arguments);
  };
})();

exports.getFlowDataDir = getFlowDataDir;

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _os = require('os');

var _os2 = _interopRequireDefault(_os);

var _process = require('nuclide-commons/process');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */

const platform = process.platform;

function getFlowDataDir() {
  return _path2.default.join(getLocalDataDirRoot(), platform === 'darwin' || platform === 'win32' ? 'Flow' : 'flow');
}

function getLocalDataDirRoot() {
  const fallback = _path2.default.join(_os2.default.homedir(), '.local', 'share');

  switch (platform) {
    case 'darwin':
      return _path2.default.join(_os2.default.homedir(), 'Library');
    case 'win32':
      return process.env.APPDATA || fallback;
    default:
      return process.env.XDG_DATA_HOME || fallback;
  }
}
//# sourceMappingURL=utils.js.map