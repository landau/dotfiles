{"version":3,"sources":["../../../../src/pkg/nuclide-flow-rpc/lib/FlowConstants.js"],"names":["ServerStatus","Object","freeze","FAILED","UNKNOWN","NOT_RUNNING","NOT_INSTALLED","BUSY","INIT","READY","VERSION_TIMEOUT_MS"],"mappings":";;;;;AAcO,MAAMA,sCAAeC,OAAOC,MAAP,CAAc;AACxCC,UAAQ,QADgC;AAExCC,WAAS,SAF+B;AAGxCC,eAAa,aAH2B;AAIxCC,iBAAe,eAJyB;AAKxCC,QAAM,MALkC;AAMxCC,QAAM,MANkC;AAOxCC,SAAO;AAPiC,CAAd,CAArB;;AAUP;AACA;AACA;AACA;AACA;AA5BA;;;;;;;;;;;;AA6BCT,YAAD;;AAEA;AACO,MAAMU,kDAAqB,KAAK,EAAL,GAAU,IAArC,C,CAA2C","file":"FlowConstants.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n * @format\n */\n\nimport type {ServerStatusType} from '..';\n\nexport const ServerStatus = Object.freeze({\n  FAILED: 'failed',\n  UNKNOWN: 'unknown',\n  NOT_RUNNING: 'not running',\n  NOT_INSTALLED: 'not installed',\n  BUSY: 'busy',\n  INIT: 'init',\n  READY: 'ready',\n});\n\n// If we put this type on the definition, use sites will not see the individual properties in the\n// Server object for things like autocomplete. Worse, Flow will assume that *any* string key will\n// yield a valid ServerStatus result, so we won't get protection against typos. Adding this\n// assertion here ensures that all of the values are valid ServerStatus options, while yielding\n// better Flow behavior at use sites.\n(ServerStatus: {[key: string]: ServerStatusType});\n\n// Controls how long the Flow version will be cached before it is considered invalid.\nexport const VERSION_TIMEOUT_MS = 10 * 60 * 1000; // 10 minutes in ms\n"]}