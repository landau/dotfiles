{"version":3,"sources":["../../../../src/pkg/nuclide-flow-rpc/lib/config.js"],"names":["getConfig","setConfig","config","functionSnippetShouldIncludeArguments","stopFlowOnExit","lazyServer","key","val"],"mappings":";;;;;QAqBgBA,S,GAAAA,S;QAIAC,S,GAAAA,S;;AAZhB;;;;;;AAbA;;;;;;;;;;;;AAeA,MAAMC,SAAuB;AAC3BC,yCAAuC,IADZ;AAE3BC,kBAAgB,IAFW;AAG3BC,cAAY;AAHe,CAA7B;;AAMO,SAASL,SAAT,CAAmBM,GAAnB,EAAqD;AAC1D,SAAOJ,OAAOI,GAAP,CAAP;AACD;;AAEM,SAASL,SAAT,CAAmBK,GAAnB,EAA8CC,GAA9C,EAAgE;AACrE;AACA,wBAAU,OAAOA,GAAP,KAAe,OAAOL,OAAOI,GAAP,CAAhC;AACAJ,SAAOI,GAAP,IAAeC,GAAf;AACD","file":"config.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n * @format\n */\n\nimport type {FlowSettings} from './FlowService';\nimport invariant from 'assert';\n\nconst config: FlowSettings = {\n  functionSnippetShouldIncludeArguments: true,\n  stopFlowOnExit: true,\n  lazyServer: false,\n};\n\nexport function getConfig(key: $Keys<typeof config>): mixed {\n  return config[key];\n}\n\nexport function setConfig(key: $Keys<typeof config>, val: mixed): void {\n  // Flow's $PropertyType is not powerful enough to express the relationship we want here.\n  invariant(typeof val === typeof config[key]);\n  config[key] = (val: any);\n}\n"]}