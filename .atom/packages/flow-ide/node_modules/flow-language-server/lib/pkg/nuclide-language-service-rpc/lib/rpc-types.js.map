{"version":3,"sources":["../../../../src/pkg/nuclide-language-service-rpc/lib/rpc-types.js"],"names":[],"mappings":";;AAYA","file":"rpc-types.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n * @format\n */\n\nimport {ConnectableObservable} from 'rxjs';\n\nexport type ShowNotificationLevel = 'info' | 'log' | 'warning' | 'error';\n\n// This interface is exposed by the client to the server\nexport interface HostServices {\n  consoleNotification(\n    source: string,\n    level: ShowNotificationLevel,\n    text: string,\n  ): void,\n\n  dialogNotification(\n    level: ShowNotificationLevel,\n    text: string,\n  ): ConnectableObservable<void>,\n\n  dialogRequest(\n    level: ShowNotificationLevel,\n    text: string,\n    buttonLabels: Array<string>,\n    closeLabel: string,\n  ): ConnectableObservable<string>,\n\n  dispose(): void,\n\n  // Internal implementation method. Normally we'd keep it private.\n  // But we need it to be remotable across NuclideRPC, so it must be public.\n  childRegister(child: HostServices): Promise<HostServices>,\n}\n"]}