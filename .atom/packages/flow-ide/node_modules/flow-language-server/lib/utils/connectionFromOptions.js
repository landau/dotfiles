'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = connectionFromOptions;

var _vscodeJsonrpc = require('vscode-jsonrpc');

var _vscodeLanguageserver = require('vscode-languageserver');

var _net = require('net');

var _net2 = _interopRequireDefault(_net);

var _stream = require('stream');

var _stream2 = _interopRequireDefault(_stream);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function connectionFromOptions(options) {
  let reader;
  let writer;
  let server;

  switch (options.method) {
    case 'socket':
      // For socket connection, the message connection needs to be
      // established before the server socket starts listening.
      // Do that, and return at the end of this block.
      writer = new _stream2.default.PassThrough();
      reader = new _stream2.default.PassThrough();
      server = _net2.default.createServer(socket => {
        server.close();
        socket.pipe(writer);
        reader.pipe(socket);
      }).listen(options.port);
      break;
    case 'stdio':
      reader = process.stdin;
      writer = process.stdout;
      break;
    case 'node-ipc':
    default:
      reader = new _vscodeJsonrpc.IPCMessageReader(process);
      writer = new _vscodeJsonrpc.IPCMessageWriter(process);
      break;
  }

  return (0, _vscodeLanguageserver.createConnection)(reader, writer);
} /**
   * Copyright (c) 2017-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   * @format
   */
//# sourceMappingURL=connectionFromOptions.js.map